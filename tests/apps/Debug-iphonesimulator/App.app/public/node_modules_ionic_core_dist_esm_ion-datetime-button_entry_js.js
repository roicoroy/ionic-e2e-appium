"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js"],{

/***/ 171:
/*!************************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-datetime-button.entry.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_datetime_button": function() { return /* binding */ DatetimeButton; }
/* harmony export */ });
/* harmony import */ var _Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ 9341);
/* harmony import */ var _Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ 2783);
/* harmony import */ var _Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ 5960);
/* harmony import */ var _Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ 9367);
/* harmony import */ var _index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index-8e692445.js */ 320);
/* harmony import */ var _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ionic-global-c74e4951.js */ 9656);
/* harmony import */ var _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./helpers-3b390e48.js */ 7140);
/* harmony import */ var _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./index-c4b11676.js */ 5057);
/* harmony import */ var _theme_7670341c_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./theme-7670341c.js */ 7548);
/* harmony import */ var _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./data-caf38df0.js */ 3414);





function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */






var iosDatetimeButtonCss = ":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}";
var mdDatetimeButtonCss = ":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}";

var DatetimeButton = /*#__PURE__*/function () {
  function DatetimeButton(hostRef) {
    var _this = this;

    (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DatetimeButton);

    (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__.r)(this, hostRef);
    this.datetimeEl = null;
    this.overlayEl = null;
    this.datetimePresentation = 'date-time';
    this.datetimeActive = false;
    /**
     * The color to use from your application's color palette.
     * Default options are: `"primary"`, `"secondary"`, `"tertiary"`, `"success"`, `"warning"`, `"danger"`, `"light"`, `"medium"`, and `"dark"`.
     * For more information on colors, see [theming](/docs/theming/basics).
     */

    this.color = 'primary';
    /**
     * If `true`, the user cannot interact with the button.
     */

    this.disabled = false;
    /**
     * Accepts one or more string values and converts
     * them to DatetimeParts. This is done so datetime-button
     * can work with an array internally and not need
     * to keep checking if the datetime value is `string` or `string[]`.
     */

    this.getParsedDateValues = function (value) {
      // TODO FW-2646 Remove value === ''
      if (value === '' || value === undefined || value === null) {
        return [];
      }

      if (Array.isArray(value)) {
        return value;
      }

      return [value];
    };
    /**
     * Check the value property on the linked
     * ion-datetime and then format it according
     * to the locale specified on ion-datetime.
     */


    this.setDateTimeText = function () {
      var datetimeEl = _this.datetimeEl,
          datetimePresentation = _this.datetimePresentation;

      if (!datetimeEl) {
        return;
      }

      var value = datetimeEl.value,
          locale = datetimeEl.locale,
          hourCycle = datetimeEl.hourCycle,
          preferWheel = datetimeEl.preferWheel,
          multiple = datetimeEl.multiple,
          titleSelectedDatesFormatter = datetimeEl.titleSelectedDatesFormatter;

      var parsedValues = _this.getParsedDateValues(value);
      /**
       * Both ion-datetime and ion-datetime-button default
       * to today's date and time if no value is set.
       */


      var parsedDatetimes = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__.q)(parsedValues.length > 0 ? parsedValues : [(0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__.t)()]);
      /**
       * If developers incorrectly use multiple="true"
       * with non "date" datetimes, then just select
       * the first value so the interface does
       * not appear broken. Datetime will provide a
       * warning in the console.
       */

      var firstParsedDatetime = parsedDatetimes[0];
      var use24Hour = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__.J)(locale, hourCycle); // TODO(FW-1865) - Remove once FW-1831 is fixed.

      parsedDatetimes.forEach(function (parsedDatetime) {
        parsedDatetime.tzOffset = undefined;
      });
      _this.dateText = _this.timeText = undefined;

      switch (datetimePresentation) {
        case 'date-time':
        case 'time-date':
          var dateText = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__.T)(locale, firstParsedDatetime);
          var timeText = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__.K)(locale, firstParsedDatetime, use24Hour);

          if (preferWheel) {
            _this.dateText = "".concat(dateText, " ").concat(timeText);
          } else {
            _this.dateText = dateText;
            _this.timeText = timeText;
          }

          break;

        case 'date':
          if (multiple && parsedValues.length !== 1) {
            var headerText = "".concat(parsedValues.length, " days"); // default/fallback for multiple selection

            if (titleSelectedDatesFormatter !== undefined) {
              try {
                headerText = titleSelectedDatesFormatter(parsedValues);
              } catch (e) {
                (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_7__.b)('Exception in provided `titleSelectedDatesFormatter`: ', e);
              }
            }

            _this.dateText = headerText;
          } else {
            _this.dateText = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__.T)(locale, firstParsedDatetime);
          }

          break;

        case 'time':
          _this.timeText = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__.K)(locale, firstParsedDatetime, use24Hour);
          break;

        case 'month-year':
          _this.dateText = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__.G)(locale, firstParsedDatetime);
          break;

        case 'month':
          _this.dateText = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__.S)(locale, firstParsedDatetime, {
            month: 'long'
          });
          break;

        case 'year':
          _this.dateText = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_9__.S)(locale, firstParsedDatetime, {
            year: 'numeric'
          });
          break;
      }
    };
    /**
     * Waits for the ion-datetime to re-render.
     * This is needed in order to correctly position
     * a popover relative to the trigger element.
     */


    this.waitForDatetimeChanges = /*#__PURE__*/(0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      var datetimeEl;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            datetimeEl = _this.datetimeEl;

            if (datetimeEl) {
              _context.next = 3;
              break;
            }

            return _context.abrupt("return", Promise.resolve());

          case 3:
            return _context.abrupt("return", new Promise(function (resolve) {
              (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_6__.a)(datetimeEl, 'ionRender', resolve, {
                once: true
              });
            }));

          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));

    this.handleDateClick = /*#__PURE__*/function () {
      var _ref2 = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(ev) {
        var datetimeEl, datetimePresentation, needsPresentationChange, needsChange;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              datetimeEl = _this.datetimeEl, datetimePresentation = _this.datetimePresentation;

              if (datetimeEl) {
                _context2.next = 3;
                break;
              }

              return _context2.abrupt("return");

            case 3:
              needsPresentationChange = false;
              /**
               * When clicking the date button,
               * we need to make sure that only a date
               * picker is displayed. For presentation styles
               * that display content other than a date picker,
               * we need to update the presentation style.
               */

              _context2.t0 = datetimePresentation;
              _context2.next = _context2.t0 === 'date-time' ? 7 : _context2.t0 === 'time-date' ? 7 : 10;
              break;

            case 7:
              needsChange = datetimeEl.presentation !== 'date';
              /**
               * The date+time wheel picker
               * shows date and time together,
               * so do not adjust the presentation
               * in that case.
               */

              if (!datetimeEl.preferWheel && needsChange) {
                datetimeEl.presentation = 'date';
                needsPresentationChange = true;
              }

              return _context2.abrupt("break", 10);

            case 10:
              /**
               * Track which button was clicked
               * so that it can have the correct
               * activated styles applied when
               * the modal/popover containing
               * the datetime is opened.
               */
              _this.selectedButton = 'date';

              _this.presentOverlay(ev, needsPresentationChange, _this.dateTargetEl);

            case 12:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }();

    this.handleTimeClick = function (ev) {
      var datetimeEl = _this.datetimeEl,
          datetimePresentation = _this.datetimePresentation;

      if (!datetimeEl) {
        return;
      }

      var needsPresentationChange = false;
      /**
       * When clicking the time button,
       * we need to make sure that only a time
       * picker is displayed. For presentation styles
       * that display content other than a time picker,
       * we need to update the presentation style.
       */

      switch (datetimePresentation) {
        case 'date-time':
        case 'time-date':
          var needsChange = datetimeEl.presentation !== 'time';

          if (needsChange) {
            datetimeEl.presentation = 'time';
            needsPresentationChange = true;
          }

          break;
      }
      /**
       * Track which button was clicked
       * so that it can have the correct
       * activated styles applied when
       * the modal/popover containing
       * the datetime is opened.
       */


      _this.selectedButton = 'time';

      _this.presentOverlay(ev, needsPresentationChange, _this.timeTargetEl);
    };
    /**
     * If the datetime is presented in an
     * overlay, the datetime and overlay
     * should be appropriately sized.
     * These classes provide default sizing values
     * that developers can customize.
     * The goal is to provide an overlay that is
     * reasonably sized with a datetime that
     * fills the entire container.
     */


    this.presentOverlay = /*#__PURE__*/function () {
      var _ref3 = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(ev, needsPresentationChange, triggerEl) {
        var overlayEl;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              overlayEl = _this.overlayEl;

              if (overlayEl) {
                _context3.next = 3;
                break;
              }

              return _context3.abrupt("return");

            case 3:
              if (!(overlayEl.tagName === 'ION-POPOVER')) {
                _context3.next = 10;
                break;
              }

              if (!needsPresentationChange) {
                _context3.next = 7;
                break;
              }

              _context3.next = 7;
              return _this.waitForDatetimeChanges();

            case 7:
              /**
               * We pass the trigger button element
               * so that the popover aligns with the individual
               * button that was clicked, not the component container.
               */
              overlayEl.present(Object.assign(Object.assign({}, ev), {
                detail: {
                  ionShadowTarget: triggerEl
                }
              }));
              _context3.next = 11;
              break;

            case 10:
              overlayEl.present();

            case 11:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));

      return function (_x2, _x3, _x4) {
        return _ref3.apply(this, arguments);
      };
    }();
  }

  (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DatetimeButton, [{
    key: "componentWillLoad",
    value: function () {
      var _componentWillLoad = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
        var _this2 = this;

        var datetime, datetimeEl, io, overlayEl;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              datetime = this.datetime;

              if (datetime) {
                _context4.next = 4;
                break;
              }

              (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_7__.b)('An ID associated with an ion-datetime instance is required for ion-datetime-button to function properly.', this.el);
              return _context4.abrupt("return");

            case 4:
              datetimeEl = this.datetimeEl = document.getElementById(datetime);

              if (datetimeEl) {
                _context4.next = 8;
                break;
              }

              (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_7__.b)("No ion-datetime instance found for ID '".concat(datetime, "'."), this.el);
              return _context4.abrupt("return");

            case 8:
              /**
               * Since the datetime can be used in any context (overlays, accordion, etc)
               * we track when it is visible to determine when it is active.
               * This informs which button is highlighted as well as the
               * aria-expanded state.
               */
              io = new IntersectionObserver(function (entries) {
                var ev = entries[0];
                _this2.datetimeActive = ev.isIntersecting;
              }, {
                threshold: 0.01
              });
              io.observe(datetimeEl);
              /**
               * Get a reference to any modal/popover
               * the datetime is being used in so we can
               * correctly size it when it is presented.
               */

              overlayEl = this.overlayEl = datetimeEl.closest('ion-modal, ion-popover');
              /**
               * The .ion-datetime-button-overlay class contains
               * styles that allow any modal/popover to be
               * sized according to the dimensions of the datetime.
               * If developers want a smaller/larger overlay all they need
               * to do is change the width/height of the datetime.
               * Additionally, this lets us avoid having to set
               * explicit widths on each variant of datetime.
               */

              if (overlayEl) {
                overlayEl.classList.add('ion-datetime-button-overlay');
              }

              (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_6__.c)(datetimeEl, function () {
                var datetimePresentation = _this2.datetimePresentation = datetimeEl.presentation || 'date-time';
                /**
                 * Set the initial display
                 * in the rendered buttons.
                 *
                 * From there, we need to listen
                 * for ionChange to be emitted
                 * from datetime so we know when
                 * to re-render the displayed
                 * text in the buttons.
                 */

                _this2.setDateTimeText();

                (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_6__.a)(datetimeEl, 'ionChange', _this2.setDateTimeText);
                /**
                 * Configure the initial selected button
                 * in the event that the datetime is displayed
                 * without clicking one of the datetime buttons.
                 * For example, a datetime could be expanded
                 * in an accordion. In this case users only
                 * need to click the accordion header to show
                 * the datetime.
                 */

                switch (datetimePresentation) {
                  case 'date-time':
                  case 'date':
                  case 'month-year':
                  case 'month':
                  case 'year':
                    _this2.selectedButton = 'date';
                    break;

                  case 'time-date':
                  case 'time':
                    _this2.selectedButton = 'time';
                    break;
                }
              });

            case 13:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));

      function componentWillLoad() {
        return _componentWillLoad.apply(this, arguments);
      }

      return componentWillLoad;
    }()
  }, {
    key: "render",
    value: function render() {
      var _createColorClasses,
          _this3 = this;

      var color = this.color,
          dateText = this.dateText,
          timeText = this.timeText,
          selectedButton = this.selectedButton,
          datetimeActive = this.datetimeActive,
          disabled = this.disabled;
      var mode = (0,_ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_5__.b)(this);
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__.h)(_index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__.H, {
        class: (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_8__.c)(color, (_createColorClasses = {}, (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, mode, true), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, "".concat(selectedButton, "-active"), datetimeActive), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, 'datetime-button-disabled', disabled), _createColorClasses))
      }, dateText && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__.h)("button", {
        class: "ion-activatable",
        id: "date-button",
        "aria-expanded": datetimeActive ? 'true' : 'false',
        onClick: this.handleDateClick,
        disabled: disabled,
        part: "native",
        ref: function ref(el) {
          return _this3.dateTargetEl = el;
        }
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__.h)("slot", {
        name: "date-target"
      }, dateText), mode === 'md' && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__.h)("ion-ripple-effect", null)), timeText && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__.h)("button", {
        class: "ion-activatable",
        id: "time-button",
        "aria-expanded": datetimeActive ? 'true' : 'false',
        onClick: this.handleTimeClick,
        disabled: disabled,
        part: "native",
        ref: function ref(el) {
          return _this3.timeTargetEl = el;
        }
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__.h)("slot", {
        name: "time-target"
      }, timeText), mode === 'md' && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__.h)("ion-ripple-effect", null)));
    }
  }, {
    key: "el",
    get: function get() {
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_4__.i)(this);
    }
  }]);

  return DatetimeButton;
}();

DatetimeButton.style = {
  ios: iosDatetimeButtonCss,
  md: mdDatetimeButtonCss
};


/***/ })

}]);
//# sourceMappingURL=node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js.js.map