"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js"],{

/***/ 4134:
/*!*******************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_datetime": function() { return /* binding */ Datetime; },
/* harmony export */   "ion_picker": function() { return /* binding */ Picker; },
/* harmony export */   "ion_picker_column": function() { return /* binding */ PickerColumnCmp; }
/* harmony export */ });
/* harmony import */ var _Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ 9341);
/* harmony import */ var _Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ 2783);
/* harmony import */ var _Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ 8035);
/* harmony import */ var _Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ 5960);
/* harmony import */ var _Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ 9367);
/* harmony import */ var _index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-8e692445.js */ 320);
/* harmony import */ var _index_2bcb741c_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-2bcb741c.js */ 1712);
/* harmony import */ var _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ionic-global-c74e4951.js */ 9656);
/* harmony import */ var _focus_visible_bd02518b_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./focus-visible-bd02518b.js */ 763);
/* harmony import */ var _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers-3b390e48.js */ 7140);
/* harmony import */ var _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./index-c4b11676.js */ 5057);
/* harmony import */ var _dir_e8b767a8_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dir-e8b767a8.js */ 5862);
/* harmony import */ var _theme_7670341c_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./theme-7670341c.js */ 7548);
/* harmony import */ var _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./data-caf38df0.js */ 3414);
/* harmony import */ var _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./overlays-58fa8e4d.js */ 1921);
/* harmony import */ var _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./animation-4ff3f603.js */ 3449);
/* harmony import */ var _haptic_029a46f6_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./haptic-029a46f6.js */ 6745);
/* harmony import */ var _hardware_back_button_490df115_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./hardware-back-button-490df115.js */ 9222);
/* harmony import */ var _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./index-33ffec25.js */ 1356);






function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */















var isYearDisabled = function isYearDisabled(refYear, minParts, maxParts) {
  if (minParts && minParts.year > refYear) {
    return true;
  }

  if (maxParts && maxParts.year < refYear) {
    return true;
  }

  return false;
};
/**
 * Returns true if a given day should
 * not be interactive according to its value,
 * or the max/min dates.
 */


var isDayDisabled = function isDayDisabled(refParts, minParts, maxParts, dayValues) {
  /**
   * If this is a filler date (i.e. padding)
   * then the date is disabled.
   */
  if (refParts.day === null) {
    return true;
  }
  /**
   * If user passed in a list of acceptable day values
   * check to make sure that the date we are looking
   * at is in this array.
   */


  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {
    return true;
  }
  /**
   * Given a min date, perform the following
   * checks. If any of them are true, then the
   * day should be disabled:
   * 1. Is the current year < the min allowed year?
   * 2. Is the current year === min allowed year,
   * but the current month < the min allowed month?
   * 3. Is the current year === min allowed year, the
   * current month === min allow month, but the current
   * day < the min allowed day?
   */


  if (minParts && (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.i)(refParts, minParts)) {
    return true;
  }
  /**
   * Given a max date, perform the following
   * checks. If any of them are true, then the
   * day should be disabled:
   * 1. Is the current year > the max allowed year?
   * 2. Is the current year === max allowed year,
   * but the current month > the max allowed month?
   * 3. Is the current year === max allowed year, the
   * current month === max allow month, but the current
   * day > the max allowed day?
   */


  if (maxParts && (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.b)(refParts, maxParts)) {
    return true;
  }
  /**
   * If none of these checks
   * passed then the date should
   * be interactive.
   */


  return false;
};
/**
 * Given a locale, a date, the selected date(s), and today's date,
 * generate the state for a given calendar day button.
 */


var getCalendarDayState = function getCalendarDayState(locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) {
  /**
   * activeParts signals what day(s) are currently selected in the datetime.
   * If multiple="true", this will be an array, but the logic in this util
   * is the same whether we have one selected day or many because we're only
   * calculating the state for one button. So, we treat a single activeParts value
   * the same as an array of length one.
   */
  var activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];
  /**
   * The day button is active if it is selected, or in other words, if refParts
   * matches at least one selected date.
   */

  var isActive = activePartsArray.find(function (parts) {
    return (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.c)(refParts, parts);
  }) !== undefined;
  var isToday = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.c)(refParts, todayParts);
  var disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);
  /**
   * Note that we always return one object regardless of whether activeParts
   * was an array, since we pare down to one value for isActive.
   */

  return {
    disabled: disabled,
    isActive: isActive,
    isToday: isToday,
    ariaSelected: isActive ? 'true' : null,
    ariaLabel: (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.g)(locale, isToday, refParts),
    text: refParts.day != null ? (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.a)(locale, refParts) : null
  };
};
/**
 * Returns `true` if the month is disabled given the
 * current date value and min/max date constraints.
 */


var isMonthDisabled = function isMonthDisabled(refParts, _ref) {
  var minParts = _ref.minParts,
      maxParts = _ref.maxParts;

  // If the year is disabled then the month is disabled.
  if (isYearDisabled(refParts.year, minParts, maxParts)) {
    return true;
  } // If the date value is before the min date, then the month is disabled.
  // If the date value is after the max date, then the month is disabled.


  if (minParts && (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.i)(refParts, minParts) || maxParts && (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.b)(refParts, maxParts)) {
    return true;
  }

  return false;
};
/**
 * Given a working date, an optional minimum date range,
 * and an optional maximum date range; determine if the
 * previous navigation button is disabled.
 */


var isPrevMonthDisabled = function isPrevMonthDisabled(refParts, minParts, maxParts) {
  var prevMonth = Object.assign(Object.assign({}, (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.d)(refParts)), {
    day: null
  });
  return isMonthDisabled(prevMonth, {
    minParts: minParts,
    maxParts: maxParts
  });
};
/**
 * Given a working date and a maximum date range,
 * determine if the next navigation button is disabled.
 */


var isNextMonthDisabled = function isNextMonthDisabled(refParts, maxParts) {
  var nextMonth = Object.assign(Object.assign({}, (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.e)(refParts)), {
    day: null
  });
  return isMonthDisabled(nextMonth, {
    maxParts: maxParts
  });
};
/**
 * Given the value of the highlightedDates property
 * and an ISO string, return the styles to use for
 * that date, or undefined if none are found.
 */


var getHighlightStyles = function getHighlightStyles(highlightedDates, dateIsoString, el) {
  if (Array.isArray(highlightedDates)) {
    var dateStringWithoutTime = dateIsoString.split('T')[0];
    var matchingHighlight = highlightedDates.find(function (hd) {
      return hd.date === dateStringWithoutTime;
    });

    if (matchingHighlight) {
      return {
        textColor: matchingHighlight.textColor,
        backgroundColor: matchingHighlight.backgroundColor
      };
    }
  } else {
    /**
     * Wrap in a try-catch to prevent exceptions in the user's function
     * from interrupting the calendar's rendering.
     */
    try {
      return highlightedDates(dateIsoString);
    } catch (e) {
      (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__.b)('Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);
    }
  }

  return undefined;
};

var datetimeIosCss = ":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day-highlight{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:32px;height:32px;z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.calendar-day-highlight{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc);font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}.calendar-day:focus .calendar-day-highlight,.calendar-day.calendar-day-active .calendar-day-highlight{opacity:0.2}.calendar-day.calendar-day-active .calendar-day-highlight{background:var(--ion-color-base)}.calendar-day:focus .calendar-day-highlight{background:var(--ion-color-base) !important}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}.calendar-day.calendar-day-today.calendar-day-active .calendar-day-highlight{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}";
var datetimeMdCss = ":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day-highlight{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:32px;height:32px;z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.calendar-day-highlight{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}.calendar-day:focus .calendar-day-highlight{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}.calendar-day.calendar-day-today .calendar-day-highlight{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}.calendar-day.calendar-day-active .calendar-day-highlight{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}";

var Datetime = /*#__PURE__*/function () {
  function Datetime(hostRef) {
    var _this = this;

    (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, Datetime);

    (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.r)(this, hostRef);
    this.ionCancel = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionCancel", 7);
    this.ionChange = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionChange", 7);
    this.ionFocus = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionFocus", 7);
    this.ionBlur = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionBlur", 7);
    this.ionStyle = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionStyle", 7);
    this.ionRender = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionRender", 7);
    this.inputId = "ion-dt-".concat(datetimeIds++);
    this.prevPresentation = null;
    /**
     * Duplicate reference to `activeParts` that does not trigger a re-render of the component.
     * Allows caching an instance of the `activeParts` in between render cycles.
     */

    this.activePartsClone = [];
    this.showMonthAndYear = false;
    this.activeParts = [];
    this.workingParts = {
      month: 5,
      day: 28,
      year: 2021,
      hour: 13,
      minute: 52,
      ampm: 'pm'
    };
    this.isPresented = false;
    this.isTimePopoverOpen = false;
    /**
     * The color to use from your application's color palette.
     * Default options are: `"primary"`, `"secondary"`, `"tertiary"`, `"success"`, `"warning"`, `"danger"`, `"light"`, `"medium"`, and `"dark"`.
     * For more information on colors, see [theming](/docs/theming/basics).
     */

    this.color = 'primary';
    /**
     * The name of the control, which is submitted with the form data.
     */

    this.name = this.inputId;
    /**
     * If `true`, the user cannot interact with the datetime.
     */

    this.disabled = false;
    /**
     * If `true`, the datetime appears normal but is not interactive.
     */

    this.readonly = false;
    /**
     * Which values you want to select. `'date'` will show
     * a calendar picker to select the month, day, and year. `'time'`
     * will show a time picker to select the hour, minute, and (optionally)
     * AM/PM. `'date-time'` will show the date picker first and time picker second.
     * `'time-date'` will show the time picker first and date picker second.
     */

    this.presentation = 'date-time';
    /**
     * The text to display on the picker's cancel button.
     */

    this.cancelText = 'Cancel';
    /**
     * The text to display on the picker's "Done" button.
     */

    this.doneText = 'Done';
    /**
     * The text to display on the picker's "Clear" button.
     */

    this.clearText = 'Clear';
    /**
     * The locale to use for `ion-datetime`. This
     * impacts month and day name formatting.
     * The `'default'` value refers to the default
     * locale set by your device.
     */

    this.locale = 'default';
    /**
     * The first day of the week to use for `ion-datetime`. The
     * default value is `0` and represents Sunday.
     */

    this.firstDayOfWeek = 0;
    /**
     * If `true`, multiple dates can be selected at once. Only
     * applies to `presentation="date"` and `preferWheel="false"`.
     */

    this.multiple = false;
    /**
     * If `true`, a header will be shown above the calendar
     * picker. This will include both the slotted title, and
     * the selected date.
     */

    this.showDefaultTitle = false;
    /**
     * If `true`, the default "Cancel" and "OK" buttons
     * will be rendered at the bottom of the `ion-datetime`
     * component. Developers can also use the `button` slot
     * if they want to customize these buttons. If custom
     * buttons are set in the `button` slot then the
     * default buttons will not be rendered.
     */

    this.showDefaultButtons = false;
    /**
     * If `true`, a "Clear" button will be rendered alongside
     * the default "Cancel" and "OK" buttons at the bottom of the `ion-datetime`
     * component. Developers can also use the `button` slot
     * if they want to customize these buttons. If custom
     * buttons are set in the `button` slot then the
     * default buttons will not be rendered.
     */

    this.showClearButton = false;
    /**
     * If `true`, the default "Time" label will be rendered
     * for the time selector of the `ion-datetime` component.
     * Developers can also use the `time-label` slot
     * if they want to customize this label. If a custom
     * label is set in the `time-label` slot then the
     * default label will not be rendered.
     */

    this.showDefaultTimeLabel = true;
    /**
     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.
     * If `fixed`, the `ion-datetime` will have a fixed width.
     */

    this.size = 'fixed';
    /**
     * If `true`, a wheel picker will be rendered instead of a calendar grid
     * where possible. If `false`, a calendar grid will be rendered instead of
     * a wheel picker where possible.
     *
     * A wheel picker can be rendered instead of a grid when `presentation` is
     * one of the following values: `'date'`, `'date-time'`, or `'time-date'`.
     *
     * A wheel picker will always be rendered regardless of
     * the `preferWheel` value when `presentation` is one of the following values:
     * `'time'`, `'month'`, `'month-year'`, or `'year'`.
     */

    this.preferWheel = false;
    /**
     * Returns the DatetimePart interface
     * to use when rendering an initial set of
     * data. This should be used when rendering an
     * interface in an environment where the `value`
     * may not be set. This function works
     * by returning the first selected date in
     * "activePartsClone" and then falling back to
     * defaultParts if no active date is selected.
     */

    this.getActivePartsWithFallback = function () {
      var _a;

      var defaultParts = _this.defaultParts;
      return (_a = _this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;
    };

    this.getActivePart = function () {
      var activePartsClone = _this.activePartsClone;
      return Array.isArray(activePartsClone) ? activePartsClone[0] : activePartsClone;
    };

    this.closeParentOverlay = function () {
      var popoverOrModal = _this.el.closest('ion-modal, ion-popover');

      if (popoverOrModal) {
        popoverOrModal.dismiss();
      }
    };

    this.setWorkingParts = function (parts) {
      _this.workingParts = Object.assign({}, parts);
    };

    this.setActiveParts = function (parts) {
      var removeDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var multiple = _this.multiple,
          minParts = _this.minParts,
          maxParts = _this.maxParts,
          activePartsClone = _this.activePartsClone;
      /**
       * When setting the active parts, it is possible
       * to set invalid data. For example,
       * when updating January 31 to February,
       * February 31 does not exist. As a result
       * we need to validate the active parts and
       * ensure that we are only setting valid dates.
       * Additionally, we need to update the working parts
       * too in the event that the validated parts are different.
       */

      var validatedParts = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.v)(parts, minParts, maxParts);

      _this.setWorkingParts(validatedParts);

      if (multiple) {
        /**
         * We read from activePartsClone here because valueChanged() only updates that,
         * so it's the more reliable source of truth. If we read from activeParts, then
         * if you click July 1, manually set the value to July 2, and then click July 3,
         * the new value would be [July 1, July 3], ignoring the value set.
         *
         * We can then pass the new value to activeParts (rather than activePartsClone)
         * since the clone will be updated automatically by activePartsChanged().
         */
        var activePartsArray = Array.isArray(activePartsClone) ? activePartsClone : [activePartsClone];

        if (removeDate) {
          _this.activeParts = activePartsArray.filter(function (p) {
            return !(0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.c)(p, validatedParts);
          });
        } else {
          _this.activeParts = [].concat((0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__["default"])(activePartsArray), [validatedParts]);
        }
      } else {
        _this.activeParts = Object.assign({}, validatedParts);
      }

      var hasSlottedButtons = _this.el.querySelector('[slot="buttons"]') !== null;

      if (hasSlottedButtons || _this.showDefaultButtons) {
        return;
      }

      _this.confirm();
    };

    this.initializeKeyboardListeners = function () {
      var calendarBodyRef = _this.calendarBodyRef;

      if (!calendarBodyRef) {
        return;
      }

      var root = _this.el.shadowRoot;
      /**
       * Get a reference to the month
       * element we are currently viewing.
       */

      var currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');
      /**
       * When focusing the calendar body, we want to pass focus
       * to the working day, but other days should
       * only be accessible using the arrow keys. Pressing
       * Tab should jump between bodies of selectable content.
       */

      var checkCalendarBodyFocus = function checkCalendarBodyFocus(ev) {
        var _a;

        var record = ev[0];
        /**
         * If calendar body was already focused
         * when this fired or if the calendar body
         * if not currently focused, we should not re-focus
         * the inner day.
         */

        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {
          return;
        }

        _this.focusWorkingDay(currentMonth);
      };

      var mo = new MutationObserver(checkCalendarBodyFocus);
      mo.observe(calendarBodyRef, {
        attributeFilter: ['class'],
        attributeOldValue: true
      });

      _this.destroyKeyboardMO = function () {
        mo === null || mo === void 0 ? void 0 : mo.disconnect();
      };
      /**
       * We must use keydown not keyup as we want
       * to prevent scrolling when using the arrow keys.
       */


      calendarBodyRef.addEventListener('keydown', function (ev) {
        var activeElement = root.activeElement;

        if (!activeElement || !activeElement.classList.contains('calendar-day')) {
          return;
        }

        var parts = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.f)(activeElement);
        var partsToFocus;

        switch (ev.key) {
          case 'ArrowDown':
            ev.preventDefault();
            partsToFocus = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.n)(parts);
            break;

          case 'ArrowUp':
            ev.preventDefault();
            partsToFocus = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.m)(parts);
            break;

          case 'ArrowRight':
            ev.preventDefault();
            partsToFocus = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.l)(parts);
            break;

          case 'ArrowLeft':
            ev.preventDefault();
            partsToFocus = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.k)(parts);
            break;

          case 'Home':
            ev.preventDefault();
            partsToFocus = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.j)(parts);
            break;

          case 'End':
            ev.preventDefault();
            partsToFocus = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.h)(parts);
            break;

          case 'PageUp':
            ev.preventDefault();
            partsToFocus = ev.shiftKey ? (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.O)(parts) : (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.d)(parts);
            break;

          case 'PageDown':
            ev.preventDefault();
            partsToFocus = ev.shiftKey ? (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.N)(parts) : (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.e)(parts);
            break;

          /**
           * Do not preventDefault here
           * as we do not want to override other
           * browser defaults such as pressing Enter/Space
           * to select a day.
           */

          default:
            return;
        }
        /**
         * If the day we want to move focus to is
         * disabled, do not do anything.
         */


        if (isDayDisabled(partsToFocus, _this.minParts, _this.maxParts)) {
          return;
        }

        _this.setWorkingParts(Object.assign(Object.assign({}, _this.workingParts), partsToFocus));
        /**
         * Give view a chance to re-render
         * then move focus to the new working day
         */


        requestAnimationFrame(function () {
          return _this.focusWorkingDay(currentMonth);
        });
      });
    };

    this.focusWorkingDay = function (currentMonth) {
      /**
       * Get the number of padding days so
       * we know how much to offset our next selector by
       * to grab the correct calenday-day element.
       */
      var padding = currentMonth.querySelectorAll('.calendar-day-padding');
      var day = _this.workingParts.day;

      if (day === null) {
        return;
      }
      /**
       * Get the calendar day element
       * and focus it.
       */


      var dayEl = currentMonth.querySelector(".calendar-day:nth-of-type(".concat(padding.length + day, ")"));

      if (dayEl) {
        dayEl.focus();
      }
    };

    this.processMinParts = function () {
      var min = _this.min,
          defaultParts = _this.defaultParts;

      if (min === undefined) {
        _this.minParts = undefined;
        return;
      }

      _this.minParts = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.p)(min, defaultParts);
    };

    this.processMaxParts = function () {
      var max = _this.max,
          defaultParts = _this.defaultParts;

      if (max === undefined) {
        _this.maxParts = undefined;
        return;
      }

      _this.maxParts = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.o)(max, defaultParts);
    };

    this.initializeCalendarListener = function () {
      var calendarBodyRef = _this.calendarBodyRef;

      if (!calendarBodyRef) {
        return;
      }
      /**
       * For performance reasons, we only render 3
       * months at a time: The current month, the previous
       * month, and the next month. We have a scroll listener
       * on the calendar body to append/prepend new months.
       *
       * We can do this because Stencil is smart enough to not
       * re-create the .calendar-month containers, but rather
       * update the content within those containers.
       *
       * As an added bonus, WebKit has some troubles with
       * scroll-snap-stop: always, so not rendering all of
       * the months in a row allows us to mostly sidestep
       * that issue.
       */


      var months = calendarBodyRef.querySelectorAll('.calendar-month');
      var startMonth = months[0];
      var workingMonth = months[1];
      var endMonth = months[2];
      var mode = (0,_ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_7__.b)(_this);
      var needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;
      /**
       * Before setting up the scroll listener,
       * scroll the middle month into view.
       * scrollIntoView() will scroll entire page
       * if element is not in viewport. Use scrollLeft instead.
       */

      (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.c)(function () {
        calendarBodyRef.scrollLeft = startMonth.clientWidth * ((0,_dir_e8b767a8_js__WEBPACK_IMPORTED_MODULE_11__.i)(_this.el) ? -1 : 1);

        var getChangedMonth = function getChangedMonth(parts) {
          var box = calendarBodyRef.getBoundingClientRect();
          var root = _this.el.shadowRoot;
          /**
           * Get the element that is in the center of the calendar body.
           * This will be an element inside of the active month.
           */

          var elementAtCenter = root.elementFromPoint(box.x + box.width / 2, box.y + box.height / 2);
          /**
           * If there is no element then the
           * component may be re-rendering on a slow device.
           */

          if (!elementAtCenter) return;
          var month = elementAtCenter.closest('.calendar-month');
          if (!month) return;
          /**
           * The edge of the month must be lined up with
           * the edge of the calendar body in order for
           * the component to update. Otherwise, it
           * may be the case that the user has paused their
           * swipe or the browser has not finished snapping yet.
           * Rather than check if the x values are equal,
           * we give it a tolerance of 2px to account for
           * sub pixel rendering.
           */

          var monthBox = month.getBoundingClientRect();
          if (Math.abs(monthBox.x - box.x) > 2) return;
          /**
           * From here, we can determine if the start
           * month or the end month was scrolled into view.
           * If no month was changed, then we can return from
           * the scroll callback early.
           */

          if (month === startMonth) {
            return (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.d)(parts);
          } else if (month === endMonth) {
            return (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.e)(parts);
          } else {
            return;
          }
        };

        var updateActiveMonth = function updateActiveMonth() {
          if (needsiOSRubberBandFix) {
            calendarBodyRef.style.removeProperty('pointer-events');
            appliediOSRubberBandFix = false;
          }
          /**
           * If the month did not change
           * then we can return early.
           */


          var newDate = getChangedMonth(_this.workingParts);
          if (!newDate) return;
          var month = newDate.month,
              day = newDate.day,
              year = newDate.year;

          if (isMonthDisabled({
            month: month,
            year: year,
            day: null
          }, {
            minParts: Object.assign(Object.assign({}, _this.minParts), {
              day: null
            }),
            maxParts: Object.assign(Object.assign({}, _this.maxParts), {
              day: null
            })
          })) {
            return;
          }
          /**
           * Prevent scrolling for other browsers
           * to give the DOM time to update and the container
           * time to properly snap.
           */


          calendarBodyRef.style.setProperty('overflow', 'hidden');
          /**
           * Use a writeTask here to ensure
           * that the state is updated and the
           * correct month is scrolled into view
           * in the same frame. This is not
           * typically a problem on newer devices
           * but older/slower device may have a flicker
           * if we did not do this.
           */

          (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.c)(function () {
            _this.setWorkingParts(Object.assign(Object.assign({}, _this.workingParts), {
              month: month,
              day: day,
              year: year
            }));

            calendarBodyRef.scrollLeft = workingMonth.clientWidth * ((0,_dir_e8b767a8_js__WEBPACK_IMPORTED_MODULE_11__.i)(_this.el) ? -1 : 1);
            calendarBodyRef.style.removeProperty('overflow');
          });
        };
        /**
         * When the container finishes scrolling we
         * need to update the DOM with the selected month.
         */


        var scrollTimeout;
        /**
         * We do not want to attempt to set pointer-events
         * multiple times within a single swipe gesture as
         * that adds unnecessary work to the main thread.
         */

        var appliediOSRubberBandFix = false;

        var scrollCallback = function scrollCallback() {
          if (scrollTimeout) {
            clearTimeout(scrollTimeout);
          }
          /**
           * On iOS it is possible to quickly rubber band
           * the scroll area before the scroll timeout has fired.
           * This results in users reaching the end of the scrollable
           * container before the DOM has updated.
           * By setting `pointer-events: none` we can ensure that
           * subsequent swipes do not happen while the container
           * is snapping.
           */


          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {
            calendarBodyRef.style.setProperty('pointer-events', 'none');
            appliediOSRubberBandFix = true;
          } // Wait ~3 frames


          scrollTimeout = setTimeout(updateActiveMonth, 50);
        };

        calendarBodyRef.addEventListener('scroll', scrollCallback);

        _this.destroyCalendarListener = function () {
          calendarBodyRef.removeEventListener('scroll', scrollCallback);
        };
      });
    };
    /**
     * Clean up all listeners except for the overlay
     * listener. This is so that we can re-create the listeners
     * if the datetime has been hidden/presented by a modal or popover.
     */


    this.destroyInteractionListeners = function () {
      var destroyCalendarListener = _this.destroyCalendarListener,
          destroyKeyboardMO = _this.destroyKeyboardMO;

      if (destroyCalendarListener !== undefined) {
        destroyCalendarListener();
      }

      if (destroyKeyboardMO !== undefined) {
        destroyKeyboardMO();
      }
    };

    this.processValue = function (value) {
      /**
       * TODO FW-2646 remove value !== ''
       */
      var hasValue = value !== '' && value !== null && value !== undefined;
      var valueToProcess = hasValue ? (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.q)(value) : _this.defaultParts;
      var minParts = _this.minParts,
          maxParts = _this.maxParts,
          multiple = _this.multiple;

      if (!multiple && Array.isArray(value)) {
        _this.value = value[0];
        valueToProcess = valueToProcess[0];
      }
      /**
       * Datetime should only warn of out of bounds values
       * if set by the user. If the `value` is undefined,
       * we will default to today's date which may be out
       * of bounds. In this case, the warning makes it look
       * like the developer did something wrong which is
       * not true.
       */


      if (hasValue) {
        (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.w)(valueToProcess, minParts, maxParts);
      }
      /**
       * If there are multiple values, pick an arbitrary one to clamp to. This way,
       * if the values are across months, we always show at least one of them. Note
       * that the values don't necessarily have to be in order.
       */


      var singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;

      var _clampDate = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.P)(singleValue, minParts, maxParts),
          month = _clampDate.month,
          day = _clampDate.day,
          year = _clampDate.year,
          hour = _clampDate.hour,
          minute = _clampDate.minute,
          tzOffset = _clampDate.tzOffset;

      var ampm = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.Q)(hour);

      _this.setWorkingParts({
        month: month,
        day: day,
        year: year,
        hour: hour,
        minute: minute,
        tzOffset: tzOffset,
        ampm: ampm
      });
      /**
       * Since `activeParts` indicates a value that
       * been explicitly selected either by the
       * user or the app, only update `activeParts`
       * if the `value` property is set.
       */


      if (hasValue) {
        if (Array.isArray(valueToProcess)) {
          _this.activeParts = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__["default"])(valueToProcess);
        } else {
          _this.activeParts = {
            month: month,
            day: day,
            year: year,
            hour: hour,
            minute: minute,
            tzOffset: tzOffset,
            ampm: ampm
          };
        }
      } else {
        /**
         * Reset the active parts if the value is not set.
         * This will clear the selected calendar day when
         * performing a clear action or using the reset() method.
         */
        _this.activeParts = [];
      }
    };

    this.onFocus = function () {
      _this.ionFocus.emit();
    };

    this.onBlur = function () {
      _this.ionBlur.emit();
    };

    this.hasValue = function () {
      return _this.value != null && _this.value !== '';
    };

    this.nextMonth = function () {
      var calendarBodyRef = _this.calendarBodyRef;

      if (!calendarBodyRef) {
        return;
      }

      var nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');

      if (!nextMonth) {
        return;
      }

      var left = nextMonth.offsetWidth * 2;
      calendarBodyRef.scrollTo({
        top: 0,
        left: left * ((0,_dir_e8b767a8_js__WEBPACK_IMPORTED_MODULE_11__.i)(_this.el) ? -1 : 1),
        behavior: 'smooth'
      });
    };

    this.prevMonth = function () {
      var calendarBodyRef = _this.calendarBodyRef;

      if (!calendarBodyRef) {
        return;
      }

      var prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');

      if (!prevMonth) {
        return;
      }

      calendarBodyRef.scrollTo({
        top: 0,
        left: 0,
        behavior: 'smooth'
      });
    };

    this.toggleMonthAndYearView = function () {
      _this.showMonthAndYear = !_this.showMonthAndYear;
    };
  }

  (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(Datetime, [{
    key: "disabledChanged",
    value: function disabledChanged() {
      this.emitStyle();
    }
  }, {
    key: "minChanged",
    value: function minChanged() {
      this.processMinParts();
    }
  }, {
    key: "maxChanged",
    value: function maxChanged() {
      this.processMaxParts();
    }
  }, {
    key: "yearValuesChanged",
    value: function yearValuesChanged() {
      this.parsedYearValues = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.r)(this.yearValues);
    }
  }, {
    key: "monthValuesChanged",
    value: function monthValuesChanged() {
      this.parsedMonthValues = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.r)(this.monthValues);
    }
  }, {
    key: "dayValuesChanged",
    value: function dayValuesChanged() {
      this.parsedDayValues = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.r)(this.dayValues);
    }
  }, {
    key: "hourValuesChanged",
    value: function hourValuesChanged() {
      this.parsedHourValues = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.r)(this.hourValues);
    }
  }, {
    key: "minuteValuesChanged",
    value: function minuteValuesChanged() {
      this.parsedMinuteValues = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.r)(this.minuteValues);
    }
  }, {
    key: "activePartsChanged",
    value: function activePartsChanged() {
      this.activePartsClone = this.activeParts;
    }
    /**
     * Update the datetime value when the value changes
     */

  }, {
    key: "valueChanged",
    value: function valueChanged() {
      var value = this.value,
          minParts = this.minParts,
          maxParts = this.maxParts,
          workingParts = this.workingParts,
          multiple = this.multiple;

      if (this.hasValue()) {
        if (!multiple && Array.isArray(value)) {
          this.value = value[0];
          return; // setting this.value will trigger re-run of this function
        }
        /**
         * Clones the value of the `activeParts` to the private clone, to update
         * the date display on the current render cycle without causing another render.
         *
         * This allows us to update the current value's date/time display without
         * refocusing or shifting the user's display (leaves the user in place).
         */


        var valueDateParts = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.q)(value);

        if (valueDateParts) {
          (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.w)(valueDateParts, minParts, maxParts);

          if (Array.isArray(valueDateParts)) {
            this.activePartsClone = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__["default"])(valueDateParts);
          } else {
            var month = valueDateParts.month,
                day = valueDateParts.day,
                year = valueDateParts.year,
                hour = valueDateParts.hour,
                minute = valueDateParts.minute;
            var ampm = hour != null ? hour >= 12 ? 'pm' : 'am' : undefined;
            this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), {
              month: month,
              day: day,
              year: year,
              hour: hour,
              minute: minute,
              ampm: ampm
            });
            /**
             * The working parts am/pm value must be updated when the value changes, to
             * ensure the time picker hour column values are generated correctly.
             *
             * Note that we don't need to do this if valueDateParts is an array, since
             * multiple="true" does not apply to time pickers.
             */

            this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {
              ampm: ampm
            }));
          }
        } else {
          (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__.p)("Unable to parse date string: ".concat(value, ". Please provide a valid ISO 8601 datetime string."));
        }
      }

      this.emitStyle();
      this.ionChange.emit({
        value: value
      });
    }
    /**
     * Confirms the selected datetime value, updates the
     * `value` property, and optionally closes the popover
     * or modal that the datetime was presented in.
     */

  }, {
    key: "confirm",
    value: function () {
      var _confirm = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var closeOverlay,
            isCalendarPicker,
            activeParts,
            activePartsIsArray,
            dates,
            i,
            date,
            _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              closeOverlay = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;
              isCalendarPicker = this.isCalendarPicker, activeParts = this.activeParts;
              /**
               * We only update the value if the presentation is not a calendar picker.
               */

              if (activeParts !== undefined || !isCalendarPicker) {
                activePartsIsArray = Array.isArray(activeParts);

                if (activePartsIsArray && activeParts.length === 0) {
                  this.value = undefined;
                } else {
                  /**
                   * Prevent convertDataToISO from doing any
                   * kind of transformation based on timezone
                   * This cancels out any change it attempts to make
                   *
                   * Important: Take the timezone offset based on
                   * the date that is currently selected, otherwise
                   * there can be 1 hr difference when dealing w/ DST
                   */
                  if (activePartsIsArray) {
                    dates = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.s)(activeParts).map(function (str) {
                      return new Date(str);
                    });

                    for (i = 0; i < dates.length; i++) {
                      activeParts[i].tzOffset = dates[i].getTimezoneOffset() * -1;
                    }
                  } else {
                    date = new Date((0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.s)(activeParts));
                    activeParts.tzOffset = date.getTimezoneOffset() * -1;
                  }

                  this.value = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.s)(activeParts);
                }
              }

              if (closeOverlay) {
                this.closeParentOverlay();
              }

            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));

      function confirm() {
        return _confirm.apply(this, arguments);
      }

      return confirm;
    }()
    /**
     * Resets the internal state of the datetime but does not update the value.
     * Passing a valid ISO-8601 string will reset the state of the component to the provided date.
     * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.
     */

  }, {
    key: "reset",
    value: function () {
      var _reset = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(startDate) {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              this.processValue(startDate);

            case 1:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));

      function reset(_x) {
        return _reset.apply(this, arguments);
      }

      return reset;
    }()
    /**
     * Emits the ionCancel event and
     * optionally closes the popover
     * or modal that the datetime was
     * presented in.
     */

  }, {
    key: "cancel",
    value: function () {
      var _cancel = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        var closeOverlay,
            _args3 = arguments;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              closeOverlay = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : false;
              this.ionCancel.emit();

              if (closeOverlay) {
                this.closeParentOverlay();
              }

            case 3:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));

      function cancel() {
        return _cancel.apply(this, arguments);
      }

      return cancel;
    }()
  }, {
    key: "isCalendarPicker",
    get: function get() {
      var presentation = this.presentation;
      return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      this.clearFocusVisible = (0,_focus_visible_bd02518b_js__WEBPACK_IMPORTED_MODULE_8__.startFocusVisible)(this.el).destroy;
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      if (this.clearFocusVisible) {
        this.clearFocusVisible();
        this.clearFocusVisible = undefined;
      }
    }
  }, {
    key: "initializeListeners",
    value: function initializeListeners() {
      this.initializeCalendarListener();
      this.initializeKeyboardListeners();
    }
  }, {
    key: "componentDidLoad",
    value: function componentDidLoad() {
      var _this2 = this;

      /**
       * If a scrollable element is hidden using `display: none`,
       * it will not have a scroll height meaning we cannot scroll elements
       * into view. As a result, we will need to wait for the datetime to become
       * visible if used inside of a modal or a popover otherwise the scrollable
       * areas will not have the correct values snapped into place.
       */
      var visibleCallback = function visibleCallback(entries) {
        var ev = entries[0];

        if (!ev.isIntersecting) {
          return;
        }

        _this2.initializeListeners();
        /**
         * TODO FW-2793: Datetime needs a frame to ensure that it
         * can properly scroll contents into view. As a result
         * we hide the scrollable content until after that frame
         * so users do not see the content quickly shifting. The downside
         * is that the content will pop into view a frame after. Maybe there
         * is a better way to handle this?
         */


        (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.c)(function () {
          _this2.el.classList.add('datetime-ready');
        });
      };

      var visibleIO = new IntersectionObserver(visibleCallback, {
        threshold: 0.01
      });
      /**
       * Use raf to avoid a race condition between the component loading and
       * its display animation starting (such as when shown in a modal). This
       * could cause the datetime to start at a visibility of 0, erroneously
       * triggering the `hiddenIO` observer below.
       */

      (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_9__.r)(function () {
        return visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(_this2.el);
      });
      /**
       * We need to clean up listeners when the datetime is hidden
       * in a popover/modal so that we can properly scroll containers
       * back into view if they are re-presented. When the datetime is hidden
       * the scroll areas have scroll widths/heights of 0px, so any snapping
       * we did originally has been lost.
       */

      var hiddenCallback = function hiddenCallback(entries) {
        var ev = entries[0];

        if (ev.isIntersecting) {
          return;
        }

        _this2.destroyInteractionListeners();
        /**
         * When datetime is hidden, we need to make sure that
         * the month/year picker is closed. Otherwise,
         * it will be open when the datetime re-appears
         * and the scroll area of the calendar grid will be 0.
         * As a result, the wrong month will be shown.
         */


        _this2.showMonthAndYear = false;
        (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.c)(function () {
          _this2.el.classList.remove('datetime-ready');
        });
      };

      var hiddenIO = new IntersectionObserver(hiddenCallback, {
        threshold: 0
      });
      (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_9__.r)(function () {
        return hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(_this2.el);
      });
      /**
       * Datetime uses Ionic components that emit
       * ionFocus and ionBlur. These events are
       * composed meaning they will cross
       * the shadow dom boundary. We need to
       * stop propagation on these events otherwise
       * developers will see 2 ionFocus or 2 ionBlur
       * events at a time.
       */

      var root = (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_9__.g)(this.el);
      root.addEventListener('ionFocus', function (ev) {
        return ev.stopPropagation();
      });
      root.addEventListener('ionBlur', function (ev) {
        return ev.stopPropagation();
      });
    }
    /**
     * When the presentation is changed, all calendar content is recreated,
     * so we need to re-init behavior with the new elements.
     */

  }, {
    key: "componentDidRender",
    value: function componentDidRender() {
      var _this3 = this;

      var presentation = this.presentation,
          prevPresentation = this.prevPresentation,
          calendarBodyRef = this.calendarBodyRef,
          minParts = this.minParts,
          preferWheel = this.preferWheel;
      /**
       * TODO(FW-2165)
       * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.
       * When using `min`, we add `scroll-snap-align: none`
       * to the disabled month so that users cannot scroll to it.
       * This triggers a bug in WebKit where the scroll position is reset.
       * Since the month change logic is handled by a scroll listener,
       * this causes the month to change leading to `scroll-snap-align`
       * changing again, thus changing the scroll position again and causing
       * an infinite loop.
       * This issue only applies to the calendar grid, so we can disable
       * it if the calendar grid is not being used.
       */

      var hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);

      if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {
        var workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');

        if (workingMonth) {
          calendarBodyRef.scrollLeft = workingMonth.clientWidth * ((0,_dir_e8b767a8_js__WEBPACK_IMPORTED_MODULE_11__.i)(this.el) ? -1 : 1);
        }
      }

      if (prevPresentation === null) {
        this.prevPresentation = presentation;
        return;
      }

      if (presentation === prevPresentation) {
        return;
      }

      this.prevPresentation = presentation;
      this.destroyInteractionListeners();
      this.initializeListeners();
      /**
       * The month/year picker from the date interface
       * should be closed as it is not available in non-date
       * interfaces.
       */

      this.showMonthAndYear = false;
      (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_9__.r)(function () {
        _this3.ionRender.emit();
      });
    }
  }, {
    key: "componentWillLoad",
    value: function componentWillLoad() {
      var el = this.el,
          highlightedDates = this.highlightedDates,
          multiple = this.multiple,
          presentation = this.presentation,
          preferWheel = this.preferWheel;

      if (multiple) {
        if (presentation !== 'date') {
          (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__.p)('Multiple date selection is only supported for presentation="date".', el);
        }

        if (preferWheel) {
          (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__.p)('Multiple date selection is not supported with preferWheel="true".', el);
        }
      }

      if (highlightedDates !== undefined) {
        if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {
          (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__.p)('The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);
        }

        if (preferWheel) {
          (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__.p)('The highlightedDates property is not supported with preferWheel="true".', el);
        }
      }

      this.processMinParts();
      this.processMaxParts();
      var hourValues = this.parsedHourValues = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.r)(this.hourValues);
      var minuteValues = this.parsedMinuteValues = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.r)(this.minuteValues);
      var monthValues = this.parsedMonthValues = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.r)(this.monthValues);
      var yearValues = this.parsedYearValues = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.r)(this.yearValues);
      var dayValues = this.parsedDayValues = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.r)(this.dayValues);
      var todayParts = this.todayParts = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.q)((0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.t)());
      this.defaultParts = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.u)(todayParts, monthValues, dayValues, yearValues, hourValues, minuteValues);
      this.processValue(this.value);
      this.emitStyle();
    }
  }, {
    key: "emitStyle",
    value: function emitStyle() {
      this.ionStyle.emit({
        interactive: true,
        datetime: true,
        'interactive-disabled': this.disabled
      });
    }
    /**
     * Universal render methods
     * These are pieces of datetime that
     * are rendered independently of presentation.
     */

  }, {
    key: "renderFooter",
    value: function renderFooter() {
      var _this4 = this,
          _class;

      var showDefaultButtons = this.showDefaultButtons,
          showClearButton = this.showClearButton;
      var hasSlottedButtons = this.el.querySelector('[slot="buttons"]') !== null;

      if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {
        return;
      }

      var clearButtonClick = function clearButtonClick() {
        _this4.reset();

        _this4.value = undefined;
      };
      /**
       * By default we render two buttons:
       * Cancel - Dismisses the datetime and
       * does not update the `value` prop.
       * OK - Dismisses the datetime and
       * updates the `value` prop.
       */


      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "datetime-footer"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "datetime-buttons"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: (_class = {}, (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_class, 'datetime-action-buttons', true), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_class, 'has-clear-button', this.showClearButton), _class)
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("slot", {
        name: "buttons"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-buttons", null, showDefaultButtons && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-button", {
        id: "cancel-button",
        color: this.color,
        onClick: function onClick() {
          return _this4.cancel(true);
        }
      }, this.cancelText), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", null, showClearButton && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-button", {
        id: "clear-button",
        color: this.color,
        onClick: function onClick() {
          return clearButtonClick();
        }
      }, this.clearText), showDefaultButtons && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-button", {
        id: "confirm-button",
        color: this.color,
        onClick: function onClick() {
          return _this4.confirm(true);
        }
      }, this.doneText)))))));
    }
    /**
     * Wheel picker render methods
     */

  }, {
    key: "renderWheelPicker",
    value: function renderWheelPicker() {
      var forcePresentation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.presentation;

      /**
       * If presentation="time-date" we switch the
       * order of the render array here instead of
       * manually reordering each date/time picker
       * column with CSS. This allows for additional
       * flexibility if we need to render subsets
       * of the date/time data or do additional ordering
       * within the child render functions.
       */
      var renderArray = forcePresentation === 'time-date' ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)] : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-picker-internal", null, renderArray);
    }
  }, {
    key: "renderDatePickerColumns",
    value: function renderDatePickerColumns(forcePresentation) {
      return forcePresentation === 'date-time' || forcePresentation === 'time-date' ? this.renderCombinedDatePickerColumn() : this.renderIndividualDatePickerColumns(forcePresentation);
    }
  }, {
    key: "renderCombinedDatePickerColumn",
    value: function renderCombinedDatePickerColumn() {
      var _this5 = this;

      var defaultParts = this.defaultParts,
          workingParts = this.workingParts,
          locale = this.locale,
          minParts = this.minParts,
          maxParts = this.maxParts,
          todayParts = this.todayParts,
          isDateEnabled = this.isDateEnabled;
      var activePart = this.getActivePartsWithFallback();
      /**
       * By default, generate a range of 3 months:
       * Previous month, current month, and next month
       */

      var monthsToRender = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.I)(workingParts);
      var lastMonth = monthsToRender[monthsToRender.length - 1];
      /**
       * Ensure that users can select the entire window of dates.
       */

      monthsToRender[0].day = 1;
      lastMonth.day = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.x)(lastMonth.month, lastMonth.year);
      /**
       * Narrow the dates rendered based on min/max dates (if any).
       * The `min` date is used if the min is after the generated min month.
       * The `max` date is used if the max is before the generated max month.
       * This ensures that the sliding window always stays at 3 months
       * but still allows future dates to be lazily rendered based on any min/max
       * constraints.
       */

      var min = minParts !== undefined && (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.b)(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];
      var max = maxParts !== undefined && (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.i)(maxParts, lastMonth) ? maxParts : lastMonth;
      var result = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.y)(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);
      var items = result.items;
      var parts = result.parts;

      if (isDateEnabled) {
        items = items.map(function (itemObject, index) {
          var referenceParts = parts[index];
          var disabled;

          try {
            /**
             * The `isDateEnabled` implementation is try-catch wrapped
             * to prevent exceptions in the user's function from
             * interrupting the calendar rendering.
             */
            disabled = !isDateEnabled((0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.s)(referenceParts));
          } catch (e) {
            (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__.b)('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);
          }

          return Object.assign(Object.assign({}, itemObject), {
            disabled: disabled
          });
        });
      }
      /**
       * If we have selected a day already, then default the column
       * to that value. Otherwise, set it to the default date.
       */


      var todayString = workingParts.day !== null ? "".concat(workingParts.year, "-").concat(workingParts.month, "-").concat(workingParts.day) : "".concat(defaultParts.year, "-").concat(defaultParts.month, "-").concat(defaultParts.day);
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-picker-column-internal", {
        class: "date-column",
        color: this.color,
        items: items,
        value: todayString,
        onIonChange: function onIonChange(ev) {
          // TODO(FW-1823) Remove this when iOS 14 support is dropped.
          // Due to a Safari 14 issue we need to destroy
          // the scroll listener before we update state
          // and trigger a re-render.
          if (_this5.destroyCalendarListener) {
            _this5.destroyCalendarListener();
          }

          var value = ev.detail.value;
          var findPart = parts.find(function (_ref2) {
            var month = _ref2.month,
                day = _ref2.day,
                year = _ref2.year;
            return value === "".concat(year, "-").concat(month, "-").concat(day);
          });

          _this5.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));

          _this5.setActiveParts(Object.assign(Object.assign({}, activePart), findPart)); // We can re-attach the scroll listener after
          // the working parts have been updated.


          _this5.initializeCalendarListener();

          ev.stopPropagation();
        }
      });
    }
  }, {
    key: "renderIndividualDatePickerColumns",
    value: function renderIndividualDatePickerColumns(forcePresentation) {
      var workingParts = this.workingParts,
          isDateEnabled = this.isDateEnabled;
      var shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';
      var months = shouldRenderMonths ? (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.z)(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues) : [];
      var shouldRenderDays = forcePresentation === 'date';
      var days = shouldRenderDays ? (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.A)(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues) : [];

      if (isDateEnabled) {
        days = days.map(function (dayObject) {
          var value = dayObject.value;
          var valueNum = typeof value === 'string' ? parseInt(value) : value;
          var referenceParts = {
            month: workingParts.month,
            day: valueNum,
            year: workingParts.year
          };
          var disabled;

          try {
            /**
             * The `isDateEnabled` implementation is try-catch wrapped
             * to prevent exceptions in the user's function from
             * interrupting the calendar rendering.
             */
            disabled = !isDateEnabled((0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.s)(referenceParts));
          } catch (e) {
            (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__.b)('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);
          }

          return Object.assign(Object.assign({}, dayObject), {
            disabled: disabled
          });
        });
      }

      var shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';
      var years = shouldRenderYears ? (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.B)(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues) : [];
      /**
       * Certain locales show the day before the month.
       */

      var showMonthFirst = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.C)(this.locale, {
        month: 'numeric',
        day: 'numeric'
      });
      var renderArray = [];

      if (showMonthFirst) {
        renderArray = [this.renderMonthPickerColumn(months), this.renderDayPickerColumn(days), this.renderYearPickerColumn(years)];
      } else {
        renderArray = [this.renderDayPickerColumn(days), this.renderMonthPickerColumn(months), this.renderYearPickerColumn(years)];
      }

      return renderArray;
    }
  }, {
    key: "renderDayPickerColumn",
    value: function renderDayPickerColumn(days) {
      var _this6 = this;

      var _a;

      if (days.length === 0) {
        return [];
      }

      var workingParts = this.workingParts;
      var activePart = this.getActivePartsWithFallback();
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-picker-column-internal", {
        class: "day-column",
        color: this.color,
        items: days,
        value: (_a = workingParts.day !== null ? workingParts.day : this.defaultParts.day) !== null && _a !== void 0 ? _a : undefined,
        onIonChange: function onIonChange(ev) {
          // TODO(FW-1823) Remove this when iOS 14 support is dropped.
          // Due to a Safari 14 issue we need to destroy
          // the scroll listener before we update state
          // and trigger a re-render.
          if (_this6.destroyCalendarListener) {
            _this6.destroyCalendarListener();
          }

          _this6.setWorkingParts(Object.assign(Object.assign({}, workingParts), {
            day: ev.detail.value
          }));

          _this6.setActiveParts(Object.assign(Object.assign({}, activePart), {
            day: ev.detail.value
          })); // We can re-attach the scroll listener after
          // the working parts have been updated.


          _this6.initializeCalendarListener();

          ev.stopPropagation();
        }
      });
    }
  }, {
    key: "renderMonthPickerColumn",
    value: function renderMonthPickerColumn(months) {
      var _this7 = this;

      if (months.length === 0) {
        return [];
      }

      var workingParts = this.workingParts;
      var activePart = this.getActivePartsWithFallback();
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-picker-column-internal", {
        class: "month-column",
        color: this.color,
        items: months,
        value: workingParts.month,
        onIonChange: function onIonChange(ev) {
          // TODO(FW-1823) Remove this when iOS 14 support is dropped.
          // Due to a Safari 14 issue we need to destroy
          // the scroll listener before we update state
          // and trigger a re-render.
          if (_this7.destroyCalendarListener) {
            _this7.destroyCalendarListener();
          }

          _this7.setWorkingParts(Object.assign(Object.assign({}, workingParts), {
            month: ev.detail.value
          }));

          _this7.setActiveParts(Object.assign(Object.assign({}, activePart), {
            month: ev.detail.value
          })); // We can re-attach the scroll listener after
          // the working parts have been updated.


          _this7.initializeCalendarListener();

          ev.stopPropagation();
        }
      });
    }
  }, {
    key: "renderYearPickerColumn",
    value: function renderYearPickerColumn(years) {
      var _this8 = this;

      if (years.length === 0) {
        return [];
      }

      var workingParts = this.workingParts;
      var activePart = this.getActivePartsWithFallback();
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-picker-column-internal", {
        class: "year-column",
        color: this.color,
        items: years,
        value: workingParts.year,
        onIonChange: function onIonChange(ev) {
          // TODO(FW-1823) Remove this when iOS 14 support is dropped.
          // Due to a Safari 14 issue we need to destroy
          // the scroll listener before we update state
          // and trigger a re-render.
          if (_this8.destroyCalendarListener) {
            _this8.destroyCalendarListener();
          }

          _this8.setWorkingParts(Object.assign(Object.assign({}, workingParts), {
            year: ev.detail.value
          }));

          _this8.setActiveParts(Object.assign(Object.assign({}, activePart), {
            year: ev.detail.value
          })); // We can re-attach the scroll listener after
          // the working parts have been updated.


          _this8.initializeCalendarListener();

          ev.stopPropagation();
        }
      });
    }
  }, {
    key: "renderTimePickerColumns",
    value: function renderTimePickerColumns(forcePresentation) {
      if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {
        return [];
      }
      /**
       * If a user has not selected a date,
       * then we should show all times. If the
       * user has selected a date (even if it has
       * not been confirmed yet), we should apply
       * the max and min restrictions so that the
       * time picker shows values that are
       * appropriate for the selected date.
       */


      var activePart = this.getActivePart();
      var userHasSelectedDate = activePart !== undefined;

      var _getTimeColumnsData = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.D)(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues),
          hoursData = _getTimeColumnsData.hoursData,
          minutesData = _getTimeColumnsData.minutesData,
          dayPeriodData = _getTimeColumnsData.dayPeriodData;

      return [this.renderHourPickerColumn(hoursData), this.renderMinutePickerColumn(minutesData), this.renderDayPeriodPickerColumn(dayPeriodData)];
    }
  }, {
    key: "renderHourPickerColumn",
    value: function renderHourPickerColumn(hoursData) {
      var _this9 = this;

      var workingParts = this.workingParts;
      if (hoursData.length === 0) return [];
      var activePart = this.getActivePartsWithFallback();
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-picker-column-internal", {
        color: this.color,
        value: activePart.hour,
        items: hoursData,
        numericInput: true,
        onIonChange: function onIonChange(ev) {
          _this9.setWorkingParts(Object.assign(Object.assign({}, workingParts), {
            hour: ev.detail.value
          }));

          _this9.setActiveParts(Object.assign(Object.assign({}, activePart), {
            hour: ev.detail.value
          }));

          ev.stopPropagation();
        }
      });
    }
  }, {
    key: "renderMinutePickerColumn",
    value: function renderMinutePickerColumn(minutesData) {
      var _this10 = this;

      var workingParts = this.workingParts;
      if (minutesData.length === 0) return [];
      var activePart = this.getActivePartsWithFallback();
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-picker-column-internal", {
        color: this.color,
        value: activePart.minute,
        items: minutesData,
        numericInput: true,
        onIonChange: function onIonChange(ev) {
          _this10.setWorkingParts(Object.assign(Object.assign({}, workingParts), {
            minute: ev.detail.value
          }));

          _this10.setActiveParts(Object.assign(Object.assign({}, activePart), {
            minute: ev.detail.value
          }));

          ev.stopPropagation();
        }
      });
    }
  }, {
    key: "renderDayPeriodPickerColumn",
    value: function renderDayPeriodPickerColumn(dayPeriodData) {
      var _this11 = this;

      var workingParts = this.workingParts;

      if (dayPeriodData.length === 0) {
        return [];
      }

      var activePart = this.getActivePartsWithFallback();
      var isDayPeriodRTL = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.E)(this.locale);
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-picker-column-internal", {
        style: isDayPeriodRTL ? {
          order: '-1'
        } : {},
        color: this.color,
        value: activePart.ampm,
        items: dayPeriodData,
        onIonChange: function onIonChange(ev) {
          var hour = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.R)(workingParts, ev.detail.value);

          _this11.setWorkingParts(Object.assign(Object.assign({}, workingParts), {
            ampm: ev.detail.value,
            hour: hour
          }));

          _this11.setActiveParts(Object.assign(Object.assign({}, activePart), {
            ampm: ev.detail.value,
            hour: hour
          }));

          ev.stopPropagation();
        }
      });
    }
  }, {
    key: "renderWheelView",
    value: function renderWheelView(forcePresentation) {
      var locale = this.locale;
      var showMonthFirst = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.C)(locale);
      var columnOrder = showMonthFirst ? 'month-first' : 'year-first';
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])({}, "wheel-order-".concat(columnOrder), true)
      }, this.renderWheelPicker(forcePresentation));
    }
    /**
     * Grid Render Methods
     */

  }, {
    key: "renderCalendarHeader",
    value: function renderCalendarHeader(mode) {
      var _this12 = this;

      var expandedIcon = mode === 'ios' ? _index_2bcb741c_js__WEBPACK_IMPORTED_MODULE_6__.l : _index_2bcb741c_js__WEBPACK_IMPORTED_MODULE_6__.p;
      var collapsedIcon = mode === 'ios' ? _index_2bcb741c_js__WEBPACK_IMPORTED_MODULE_6__.o : _index_2bcb741c_js__WEBPACK_IMPORTED_MODULE_6__.q;
      var prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);
      var nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts); // don't use the inheritAttributes util because it removes dir from the host, and we still need that

      var hostDir = this.el.getAttribute('dir') || undefined;
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "calendar-header"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "calendar-action-buttons"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "calendar-month-year"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-item", {
        button: true,
        detail: false,
        lines: "none",
        onClick: function onClick() {
          return _this12.toggleMonthAndYearView();
        }
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-label", null, (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.G)(this.locale, this.workingParts), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-icon", {
        "aria-hidden": "true",
        icon: this.showMonthAndYear ? expandedIcon : collapsedIcon,
        lazy: false,
        flipRtl: true
      })))), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "calendar-next-prev"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-buttons", null, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-button", {
        "aria-label": "previous month",
        disabled: prevMonthDisabled,
        onClick: function onClick() {
          return _this12.prevMonth();
        }
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-icon", {
        dir: hostDir,
        "aria-hidden": "true",
        slot: "icon-only",
        icon: _index_2bcb741c_js__WEBPACK_IMPORTED_MODULE_6__.c,
        lazy: false,
        flipRtl: true
      })), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-button", {
        "aria-label": "next month",
        disabled: nextMonthDisabled,
        onClick: function onClick() {
          return _this12.nextMonth();
        }
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-icon", {
        dir: hostDir,
        "aria-hidden": "true",
        slot: "icon-only",
        icon: _index_2bcb741c_js__WEBPACK_IMPORTED_MODULE_6__.o,
        lazy: false,
        flipRtl: true
      }))))), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "calendar-days-of-week",
        "aria-hidden": "true"
      }, (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.F)(this.locale, mode, this.firstDayOfWeek % 7).map(function (d) {
        return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
          class: "day-of-week"
        }, d);
      })));
    }
  }, {
    key: "renderMonth",
    value: function renderMonth(month, year) {
      var _this13 = this;

      var yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);
      var monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);
      var isCalMonthDisabled = !yearAllowed || !monthAllowed;
      var swipeDisabled = isMonthDisabled({
        month: month,
        year: year,
        day: null
      }, {
        // The day is not used when checking if a month is disabled.
        // Users should be able to access the min or max month, even if the
        // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).
        minParts: Object.assign(Object.assign({}, this.minParts), {
          day: null
        }),
        maxParts: Object.assign(Object.assign({}, this.maxParts), {
          day: null
        })
      }); // The working month should never have swipe disabled.
      // Otherwise the CSS scroll snap will not work and the user
      // can free-scroll the calendar.

      var isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;
      var activePart = this.getActivePartsWithFallback();
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        "aria-hidden": !isWorkingMonth ? 'true' : null,
        class: {
          'calendar-month': true,
          // Prevents scroll snap swipe gestures for months outside of the min/max bounds
          'calendar-month-disabled': !isWorkingMonth && swipeDisabled
        }
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "calendar-month-grid"
      }, (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.H)(month, year, this.firstDayOfWeek % 7).map(function (dateObject, index) {
        var day = dateObject.day,
            dayOfWeek = dateObject.dayOfWeek;
        var el = _this13.el,
            highlightedDates = _this13.highlightedDates,
            isDateEnabled = _this13.isDateEnabled,
            multiple = _this13.multiple;
        var referenceParts = {
          month: month,
          day: day,
          year: year
        };
        var isCalendarPadding = day === null;

        var _getCalendarDayState = getCalendarDayState(_this13.locale, referenceParts, _this13.activePartsClone, _this13.todayParts, _this13.minParts, _this13.maxParts, _this13.parsedDayValues),
            isActive = _getCalendarDayState.isActive,
            isToday = _getCalendarDayState.isToday,
            ariaLabel = _getCalendarDayState.ariaLabel,
            ariaSelected = _getCalendarDayState.ariaSelected,
            disabled = _getCalendarDayState.disabled,
            text = _getCalendarDayState.text;

        var dateIsoString = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.s)(referenceParts);
        var isCalDayDisabled = isCalMonthDisabled || disabled;

        if (!isCalDayDisabled && isDateEnabled !== undefined) {
          try {
            /**
             * The `isDateEnabled` implementation is try-catch wrapped
             * to prevent exceptions in the user's function from
             * interrupting the calendar rendering.
             */
            isCalDayDisabled = !isDateEnabled(dateIsoString);
          } catch (e) {
            (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__.b)('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);
          }
        }

        var dateStyle = undefined;
        /**
         * Custom highlight styles should not override the style for selected dates,
         * nor apply to "filler days" at the start of the grid.
         */

        if (highlightedDates !== undefined && !isActive && day !== null) {
          dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);
        }

        return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("button", {
          tabindex: "-1",
          "data-day": day,
          "data-month": month,
          "data-year": year,
          "data-index": index,
          "data-day-of-week": dayOfWeek,
          disabled: isCalDayDisabled,
          class: {
            'calendar-day-padding': isCalendarPadding,
            'calendar-day': true,
            'calendar-day-active': isActive,
            'calendar-day-today': isToday
          },
          style: dateStyle && {
            color: dateStyle.textColor
          },
          "aria-hidden": isCalendarPadding ? 'true' : null,
          "aria-selected": ariaSelected,
          "aria-label": ariaLabel,
          onClick: function onClick() {
            if (isCalendarPadding) {
              return;
            }

            _this13.setWorkingParts(Object.assign(Object.assign({}, _this13.workingParts), {
              month: month,
              day: day,
              year: year
            })); // multiple only needs date info, so we can wipe out other fields like time


            if (multiple) {
              _this13.setActiveParts({
                month: month,
                day: day,
                year: year
              }, isActive);
            } else {
              _this13.setActiveParts(Object.assign(Object.assign({}, activePart), {
                month: month,
                day: day,
                year: year
              }));
            }
          }
        }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
          class: "calendar-day-highlight",
          style: {
            backgroundColor: dateStyle === null || dateStyle === void 0 ? void 0 : dateStyle.backgroundColor
          }
        }), text);
      })));
    }
  }, {
    key: "renderCalendarBody",
    value: function renderCalendarBody() {
      var _this14 = this;

      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "calendar-body ion-focusable",
        ref: function ref(el) {
          return _this14.calendarBodyRef = el;
        },
        tabindex: "0"
      }, (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.I)(this.workingParts).map(function (_ref3) {
        var month = _ref3.month,
            year = _ref3.year;
        return _this14.renderMonth(month, year);
      }));
    }
  }, {
    key: "renderCalendar",
    value: function renderCalendar(mode) {
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "datetime-calendar",
        key: "datetime-calendar"
      }, this.renderCalendarHeader(mode), this.renderCalendarBody());
    }
  }, {
    key: "renderTimeLabel",
    value: function renderTimeLabel() {
      var hasSlottedTimeLabel = this.el.querySelector('[slot="time-label"]') !== null;

      if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {
        return;
      }

      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("slot", {
        name: "time-label"
      }, "Time");
    }
  }, {
    key: "renderTimeOverlay",
    value: function renderTimeOverlay() {
      var _this15 = this;

      var use24Hour = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.J)(this.locale, this.hourCycle);
      var activePart = this.getActivePartsWithFallback();
      return [(0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "time-header"
      }, this.renderTimeLabel()), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("button", {
        class: {
          'time-body': true,
          'time-body-active': this.isTimePopoverOpen
        },
        "aria-expanded": "false",
        "aria-haspopup": "true",
        onClick: function () {
          var _onClick = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(ev) {
            var popoverRef;
            return _regeneratorRuntime().wrap(function _callee4$(_context4) {
              while (1) switch (_context4.prev = _context4.next) {
                case 0:
                  popoverRef = _this15.popoverRef;

                  if (!popoverRef) {
                    _context4.next = 7;
                    break;
                  }

                  _this15.isTimePopoverOpen = true;
                  popoverRef.present(new CustomEvent('ionShadowTarget', {
                    detail: {
                      ionShadowTarget: ev.target
                    }
                  }));
                  _context4.next = 6;
                  return popoverRef.onWillDismiss();

                case 6:
                  _this15.isTimePopoverOpen = false;

                case 7:
                case "end":
                  return _context4.stop();
              }
            }, _callee4);
          }));

          function onClick(_x2) {
            return _onClick.apply(this, arguments);
          }

          return onClick;
        }()
      }, (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.K)(this.locale, activePart, use24Hour)), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-popover", {
        alignment: "center",
        translucent: true,
        overlayIndex: 1,
        arrow: false,
        onWillPresent: function onWillPresent(ev) {
          /**
           * Intersection Observers do not consistently fire between Blink and Webkit
           * when toggling the visibility of the popover and trying to scroll the picker
           * column to the correct time value.
           *
           * This will correctly scroll the element position to the correct time value,
           * before the popover is fully presented.
           */
          var cols = ev.target.querySelectorAll('ion-picker-column-internal'); // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column

          cols.forEach(function (col) {
            return col.scrollActiveItemIntoView();
          });
        },
        style: {
          '--offset-y': '-10px',
          '--min-width': 'fit-content'
        },
        // Allow native browser keyboard events to support up/down/home/end key
        // navigation within the time picker.
        keyboardEvents: true,
        ref: function ref(el) {
          return _this15.popoverRef = el;
        }
      }, this.renderWheelPicker('time'))];
    }
  }, {
    key: "getHeaderSelectedDateText",
    value: function getHeaderSelectedDateText() {
      var activeParts = this.activeParts,
          multiple = this.multiple,
          titleSelectedDatesFormatter = this.titleSelectedDatesFormatter;
      var isArray = Array.isArray(activeParts);
      var headerText;

      if (multiple && isArray && activeParts.length !== 1) {
        headerText = "".concat(activeParts.length, " days"); // default/fallback for multiple selection

        if (titleSelectedDatesFormatter !== undefined) {
          try {
            headerText = titleSelectedDatesFormatter((0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.s)(activeParts));
          } catch (e) {
            (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_10__.b)('Exception in provided `titleSelectedDatesFormatter`: ', e);
          }
        }
      } else {
        // for exactly 1 day selected (multiple set or not), show a formatted version of that
        headerText = (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.L)(this.locale, this.getActivePartsWithFallback());
      }

      return headerText;
    }
  }, {
    key: "renderHeader",
    value: function renderHeader() {
      var showExpandedHeader = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var hasSlottedTitle = this.el.querySelector('[slot="title"]') !== null;

      if (!hasSlottedTitle && !this.showDefaultTitle) {
        return;
      }

      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "datetime-header"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "datetime-title"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("slot", {
        name: "title"
      }, "Select Date")), showExpandedHeader && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "datetime-selected-date"
      }, this.getHeaderSelectedDateText()));
    }
    /**
     * Render time picker inside of datetime.
     * Do not pass color prop to segment on
     * iOS mode. MD segment has been customized and
     * should take on the color prop, but iOS
     * should just be the default segment.
     */

  }, {
    key: "renderTime",
    value: function renderTime() {
      var presentation = this.presentation;
      var timeOnlyPresentation = presentation === 'time';
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "datetime-time"
      }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay());
    }
    /**
     * Renders the month/year picker that is
     * displayed on the calendar grid.
     * The .datetime-year class has additional
     * styles that let us show/hide the
     * picker when the user clicks on the
     * toggle in the calendar header.
     */

  }, {
    key: "renderCalendarViewMonthYearPicker",
    value: function renderCalendarViewMonthYearPicker() {
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "datetime-year"
      }, this.renderWheelView('month-year'));
    }
    /**
     * Render entry point
     * All presentation types are rendered from here.
     */

  }, {
    key: "renderDatetime",
    value: function renderDatetime(mode) {
      var presentation = this.presentation,
          preferWheel = this.preferWheel;
      /**
       * Certain presentation types have separate grid and wheel displays.
       * If preferWheel is true then we should show a wheel picker instead.
       */

      var hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';

      if (preferWheel && hasWheelVariant) {
        return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];
      }

      switch (presentation) {
        case 'date-time':
          return [this.renderHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderTime(), this.renderFooter()];

        case 'time-date':
          return [this.renderHeader(), this.renderTime(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];

        case 'time':
          return [this.renderHeader(false), this.renderTime(), this.renderFooter()];

        case 'month':
        case 'month-year':
        case 'year':
          return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];

        default:
          return [this.renderHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _createColorClasses;

      var name = this.name,
          value = this.value,
          disabled = this.disabled,
          el = this.el,
          color = this.color,
          isPresented = this.isPresented,
          readonly = this.readonly,
          showMonthAndYear = this.showMonthAndYear,
          preferWheel = this.preferWheel,
          presentation = this.presentation,
          size = this.size;
      var mode = (0,_ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_7__.b)(this);
      var isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';
      var shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;
      var monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;
      var hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';
      var hasWheelVariant = hasDatePresentation && preferWheel;
      var hasGrid = hasDatePresentation && !preferWheel;
      (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_9__.e)(true, el, name, (0,_data_caf38df0_js__WEBPACK_IMPORTED_MODULE_13__.M)(value), disabled);
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)(_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.H, {
        "aria-disabled": disabled ? 'true' : null,
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        class: Object.assign({}, (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_12__.c)(color, (_createColorClasses = {}, (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, mode, true), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, 'datetime-presented', isPresented), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, 'datetime-readonly', readonly), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, 'datetime-disabled', disabled), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, 'show-month-and-year', shouldShowMonthAndYear), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, 'month-year-picker-open', monthYearPickerOpen), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, "datetime-presentation-".concat(presentation), true), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, "datetime-size-".concat(size), true), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, "datetime-prefer-wheel", hasWheelVariant), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, "datetime-grid", hasGrid), _createColorClasses)))
      }, this.renderDatetime(mode));
    }
  }, {
    key: "el",
    get: function get() {
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.i)(this);
    }
  }], [{
    key: "watchers",
    get: function get() {
      return {
        "disabled": ["disabledChanged"],
        "min": ["minChanged"],
        "max": ["maxChanged"],
        "yearValues": ["yearValuesChanged"],
        "monthValues": ["monthValuesChanged"],
        "dayValues": ["dayValuesChanged"],
        "hourValues": ["hourValuesChanged"],
        "minuteValues": ["minuteValuesChanged"],
        "activeParts": ["activePartsChanged"],
        "value": ["valueChanged"]
      };
    }
  }]);

  return Datetime;
}();

var datetimeIds = 0;
Datetime.style = {
  ios: datetimeIosCss,
  md: datetimeMdCss
};
/**
 * iOS Picker Enter Animation
 */

var iosEnterAnimation = function iosEnterAnimation(baseEl) {
  var baseAnimation = (0,_animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_15__.c)();
  var backdropAnimation = (0,_animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_15__.c)();
  var wrapperAnimation = (0,_animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_15__.c)();
  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({
    'pointer-events': 'none'
  }).afterClearStyles(['pointer-events']);
  wrapperAnimation.addElement(baseEl.querySelector('.picker-wrapper')).fromTo('transform', 'translateY(100%)', 'translateY(0%)');
  return baseAnimation.addElement(baseEl).easing('cubic-bezier(.36,.66,.04,1)').duration(400).addAnimation([backdropAnimation, wrapperAnimation]);
};
/**
 * iOS Picker Leave Animation
 */


var iosLeaveAnimation = function iosLeaveAnimation(baseEl) {
  var baseAnimation = (0,_animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_15__.c)();
  var backdropAnimation = (0,_animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_15__.c)();
  var wrapperAnimation = (0,_animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_15__.c)();
  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0.01);
  wrapperAnimation.addElement(baseEl.querySelector('.picker-wrapper')).fromTo('transform', 'translateY(0%)', 'translateY(100%)');
  return baseAnimation.addElement(baseEl).easing('cubic-bezier(.36,.66,.04,1)').duration(400).addAnimation([backdropAnimation, wrapperAnimation]);
};

var pickerIosCss = ".sc-ion-picker-ios-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}[dir=rtl].sc-ion-picker-ios-h,[dir=rtl] .sc-ion-picker-ios-h{left:unset;right:unset;right:0}.overlay-hidden.sc-ion-picker-ios-h{display:none}.picker-wrapper.sc-ion-picker-ios{border-radius:var(--border-radius);left:0;right:0;bottom:0;margin-left:auto;margin-right:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-wrapper.sc-ion-picker-ios{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.picker-toolbar.sc-ion-picker-ios{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-ios{border:0;font-family:inherit}.picker-button.sc-ion-picker-ios:active,.picker-button.sc-ion-picker-ios:focus{outline:none}.picker-columns.sc-ion-picker-ios{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom, 0);contain:strict;direction:ltr;overflow:hidden}.picker-above-highlight.sc-ion-picker-ios,.picker-below-highlight.sc-ion-picker-ios{display:none;pointer-events:none}.sc-ion-picker-ios-h{--background:var(--ion-background-color, #fff);--border-width:1px 0 0;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--height:260px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.26);color:var(--ion-item-color, var(--ion-text-color, #000))}.picker-toolbar.sc-ion-picker-ios{display:-ms-flexbox;display:flex;height:44px;border-bottom:0.55px solid var(--border-color)}.picker-toolbar-button.sc-ion-picker-ios{-ms-flex:1;flex:1;text-align:end}.picker-toolbar-button.sc-ion-picker-ios:last-child .picker-button.sc-ion-picker-ios{font-weight:600}.picker-toolbar-button.sc-ion-picker-ios:first-child{font-weight:normal;text-align:start}.picker-button.sc-ion-picker-ios,.picker-button.ion-activated.sc-ion-picker-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:1em;padding-right:1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary, #3880ff);font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-button.sc-ion-picker-ios,.picker-button.ion-activated.sc-ion-picker-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:1em;padding-inline-start:1em;-webkit-padding-end:1em;padding-inline-end:1em}}.picker-columns.sc-ion-picker-ios{height:215px;-webkit-perspective:1000px;perspective:1000px}.picker-above-highlight.sc-ion-picker-ios{left:0;top:0;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);display:block;position:absolute;width:100%;height:81px;border-bottom:1px solid var(--border-color);background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);z-index:10}[dir=rtl].sc-ion-picker-ios .picker-above-highlight.sc-ion-picker-ios,[dir=rtl].sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios,[dir=rtl] .sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}.picker-below-highlight.sc-ion-picker-ios{left:0;top:115px;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);display:block;position:absolute;width:100%;height:119px;border-top:1px solid var(--border-color);background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);z-index:11}[dir=rtl].sc-ion-picker-ios .picker-below-highlight.sc-ion-picker-ios,[dir=rtl].sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios,[dir=rtl] .sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}";
var pickerMdCss = ".sc-ion-picker-md-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}[dir=rtl].sc-ion-picker-md-h,[dir=rtl] .sc-ion-picker-md-h{left:unset;right:unset;right:0}.overlay-hidden.sc-ion-picker-md-h{display:none}.picker-wrapper.sc-ion-picker-md{border-radius:var(--border-radius);left:0;right:0;bottom:0;margin-left:auto;margin-right:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-wrapper.sc-ion-picker-md{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.picker-toolbar.sc-ion-picker-md{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-md{border:0;font-family:inherit}.picker-button.sc-ion-picker-md:active,.picker-button.sc-ion-picker-md:focus{outline:none}.picker-columns.sc-ion-picker-md{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom, 0);contain:strict;direction:ltr;overflow:hidden}.picker-above-highlight.sc-ion-picker-md,.picker-below-highlight.sc-ion-picker-md{display:none;pointer-events:none}.sc-ion-picker-md-h{--background:var(--ion-background-color, #fff);--border-width:0.55px 0 0;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--height:260px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.26);color:var(--ion-item-color, var(--ion-text-color, #000))}.picker-toolbar.sc-ion-picker-md{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;height:44px}.picker-button.sc-ion-picker-md,.picker-button.ion-activated.sc-ion-picker-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:1.1em;padding-right:1.1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary, #3880ff);font-size:14px;font-weight:500;text-transform:uppercase;-webkit-box-shadow:none;box-shadow:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-button.sc-ion-picker-md,.picker-button.ion-activated.sc-ion-picker-md{padding-left:unset;padding-right:unset;-webkit-padding-start:1.1em;padding-inline-start:1.1em;-webkit-padding-end:1.1em;padding-inline-end:1.1em}}.picker-columns.sc-ion-picker-md{height:216px;-webkit-perspective:1800px;perspective:1800px}.picker-above-highlight.sc-ion-picker-md{left:0;top:0;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);position:absolute;width:100%;height:81px;border-bottom:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--ion-background-color, #fff)), to(rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8)));background:linear-gradient(to bottom, var(--ion-background-color, #fff) 20%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%);z-index:10}[dir=rtl].sc-ion-picker-md .picker-above-highlight.sc-ion-picker-md,[dir=rtl].sc-ion-picker-md-h .picker-above-highlight.sc-ion-picker-md,[dir=rtl] .sc-ion-picker-md-h .picker-above-highlight.sc-ion-picker-md{left:unset;right:unset;right:0}.picker-below-highlight.sc-ion-picker-md{left:0;top:115px;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);position:absolute;width:100%;height:119px;border-top:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--ion-background-color, #fff)), to(rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8)));background:linear-gradient(to top, var(--ion-background-color, #fff) 30%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%);z-index:11}[dir=rtl].sc-ion-picker-md .picker-below-highlight.sc-ion-picker-md,[dir=rtl].sc-ion-picker-md-h .picker-below-highlight.sc-ion-picker-md,[dir=rtl] .sc-ion-picker-md-h .picker-below-highlight.sc-ion-picker-md{left:unset;right:unset;right:0}";

var Picker = /*#__PURE__*/function () {
  function Picker(hostRef) {
    var _this16 = this;

    (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, Picker);

    (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.r)(this, hostRef);
    this.didPresent = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionPickerDidPresent", 7);
    this.willPresent = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionPickerWillPresent", 7);
    this.willDismiss = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionPickerWillDismiss", 7);
    this.didDismiss = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionPickerDidDismiss", 7);
    this.presented = false;
    /**
     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.
     */

    this.keyboardClose = true;
    /**
     * Array of buttons to be displayed at the top of the picker.
     */

    this.buttons = [];
    /**
     * Array of columns to be displayed in the picker.
     */

    this.columns = [];
    /**
     * Number of milliseconds to wait before dismissing the picker.
     */

    this.duration = 0;
    /**
     * If `true`, a backdrop will be displayed behind the picker.
     */

    this.showBackdrop = true;
    /**
     * If `true`, the picker will be dismissed when the backdrop is clicked.
     */

    this.backdropDismiss = true;
    /**
     * If `true`, the picker will animate.
     */

    this.animated = true;

    this.onBackdropTap = function () {
      _this16.dismiss(undefined, _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_14__.B);
    };

    this.dispatchCancelHandler = function (ev) {
      var role = ev.detail.role;

      if ((0,_overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_14__.i)(role)) {
        var cancelButton = _this16.buttons.find(function (b) {
          return b.role === 'cancel';
        });

        _this16.callButtonHandler(cancelButton);
      }
    };
  }

  (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(Picker, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      (0,_overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_14__.e)(this.el);
    }
    /**
     * Present the picker overlay after it has been created.
     */

  }, {
    key: "present",
    value: function () {
      var _present2 = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        var _this17 = this;

        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return (0,_overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_14__.d)(this, 'pickerEnter', iosEnterAnimation, iosEnterAnimation, undefined);

            case 2:
              if (this.duration > 0) {
                this.durationTimeout = setTimeout(function () {
                  return _this17.dismiss();
                }, this.duration);
              }

            case 3:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));

      function present() {
        return _present2.apply(this, arguments);
      }

      return present;
    }()
    /**
     * Dismiss the picker overlay after it has been presented.
     *
     * @param data Any data to emit in the dismiss events.
     * @param role The role of the element that is dismissing the picker.
     * This can be useful in a button handler for determining which button was
     * clicked to dismiss the picker.
     * Some examples include: ``"cancel"`, `"destructive"`, "selected"`, and `"backdrop"`.
     */

  }, {
    key: "dismiss",
    value: function dismiss(data, role) {
      if (this.durationTimeout) {
        clearTimeout(this.durationTimeout);
      }

      return (0,_overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_14__.f)(this, data, role, 'pickerLeave', iosLeaveAnimation, iosLeaveAnimation);
    }
    /**
     * Returns a promise that resolves when the picker did dismiss.
     */

  }, {
    key: "onDidDismiss",
    value: function onDidDismiss() {
      return (0,_overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_14__.g)(this.el, 'ionPickerDidDismiss');
    }
    /**
     * Returns a promise that resolves when the picker will dismiss.
     */

  }, {
    key: "onWillDismiss",
    value: function onWillDismiss() {
      return (0,_overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_14__.g)(this.el, 'ionPickerWillDismiss');
    }
    /**
     * Get the column that matches the specified name.
     *
     * @param name The name of the column.
     */

  }, {
    key: "getColumn",
    value: function getColumn(name) {
      return Promise.resolve(this.columns.find(function (column) {
        return column.name === name;
      }));
    }
  }, {
    key: "buttonClick",
    value: function () {
      var _buttonClick = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(button) {
        var role, shouldDismiss;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              role = button.role;

              if (!(0,_overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_14__.i)(role)) {
                _context6.next = 3;
                break;
              }

              return _context6.abrupt("return", this.dismiss(undefined, role));

            case 3:
              _context6.next = 5;
              return this.callButtonHandler(button);

            case 5:
              shouldDismiss = _context6.sent;

              if (!shouldDismiss) {
                _context6.next = 8;
                break;
              }

              return _context6.abrupt("return", this.dismiss(this.getSelected(), button.role));

            case 8:
              return _context6.abrupt("return", Promise.resolve());

            case 9:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));

      function buttonClick(_x3) {
        return _buttonClick.apply(this, arguments);
      }

      return buttonClick;
    }()
  }, {
    key: "callButtonHandler",
    value: function () {
      var _callButtonHandler = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(button) {
        var rtn;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              if (!button) {
                _context7.next = 6;
                break;
              }

              _context7.next = 3;
              return (0,_overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_14__.s)(button.handler, this.getSelected());

            case 3:
              rtn = _context7.sent;

              if (!(rtn === false)) {
                _context7.next = 6;
                break;
              }

              return _context7.abrupt("return", false);

            case 6:
              return _context7.abrupt("return", true);

            case 7:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));

      function callButtonHandler(_x4) {
        return _callButtonHandler.apply(this, arguments);
      }

      return callButtonHandler;
    }()
  }, {
    key: "getSelected",
    value: function getSelected() {
      var selected = {};
      this.columns.forEach(function (col, index) {
        var selectedColumn = col.selectedIndex !== undefined ? col.options[col.selectedIndex] : undefined;
        selected[col.name] = {
          text: selectedColumn ? selectedColumn.text : undefined,
          value: selectedColumn ? selectedColumn.value : undefined,
          columnIndex: index
        };
      });
      return selected;
    }
  }, {
    key: "render",
    value: function render() {
      var _Object$assign,
          _this18 = this;

      var htmlAttributes = this.htmlAttributes;
      var mode = (0,_ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_7__.b)(this);
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)(_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.H, Object.assign({
        "aria-modal": "true",
        tabindex: "-1"
      }, htmlAttributes, {
        style: {
          zIndex: "".concat(20000 + this.overlayIndex)
        },
        class: Object.assign((_Object$assign = {}, (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_Object$assign, mode, true), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_Object$assign, "picker-".concat(mode), true), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_Object$assign, 'overlay-hidden', true), _Object$assign), (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_12__.g)(this.cssClass)),
        onIonBackdropTap: this.onBackdropTap,
        onIonPickerWillDismiss: this.dispatchCancelHandler
      }), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-backdrop", {
        visible: this.showBackdrop,
        tappable: this.backdropDismiss
      }), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        tabindex: "0"
      }), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "picker-wrapper ion-overlay-wrapper",
        role: "dialog"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "picker-toolbar"
      }, this.buttons.map(function (b) {
        return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
          class: buttonWrapperClass(b)
        }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("button", {
          type: "button",
          onClick: function onClick() {
            return _this18.buttonClick(b);
          },
          class: buttonClass(b)
        }, b.text));
      })), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "picker-columns"
      }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "picker-above-highlight"
      }), this.presented && this.columns.map(function (c) {
        return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-picker-column", {
          col: c
        });
      }), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "picker-below-highlight"
      }))), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        tabindex: "0"
      }));
    }
  }, {
    key: "el",
    get: function get() {
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.i)(this);
    }
  }]);

  return Picker;
}();

var buttonWrapperClass = function buttonWrapperClass(button) {
  var _ref4;

  return _ref4 = {}, (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref4, "picker-toolbar-".concat(button.role), button.role !== undefined), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref4, 'picker-toolbar-button', true), _ref4;
};

var buttonClass = function buttonClass(button) {
  return Object.assign({
    'picker-button': true,
    'ion-activatable': true
  }, (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_12__.g)(button.cssClass));
};

Picker.style = {
  ios: pickerIosCss,
  md: pickerMdCss
};
var pickerColumnIosCss = ".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{left:0;top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}[dir=rtl] .picker-opt,:host-context([dir=rtl]) .picker-opt{left:unset;right:unset;right:0}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{position:relative;-ms-flex:1;flex:1;text-align:end;white-space:nowrap}.picker-suffix{position:relative;-ms-flex:1;flex:1;text-align:start;white-space:nowrap}.picker-col{padding-left:4px;padding-right:4px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-col{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}.picker-prefix,.picker-suffix,.picker-opts{top:77px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:20px;line-height:42px;pointer-events:none}.picker-opt{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-transform-origin:center center;transform-origin:center center;height:46px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;color:inherit;font-size:20px;line-height:42px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}[dir=rtl] .picker-opt,:host-context([dir=rtl]) .picker-opt{-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}";
var pickerColumnMdCss = ".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{left:0;top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}[dir=rtl] .picker-opt,:host-context([dir=rtl]) .picker-opt{left:unset;right:unset;right:0}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{position:relative;-ms-flex:1;flex:1;text-align:end;white-space:nowrap}.picker-suffix{position:relative;-ms-flex:1;flex:1;text-align:start;white-space:nowrap}.picker-col{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-col{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}.picker-prefix,.picker-suffix,.picker-opts{top:77px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:22px;line-height:42px;pointer-events:none}.picker-opt{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;height:43px;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;color:inherit;font-size:22px;line-height:42px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}.picker-prefix,.picker-suffix,.picker-opt.picker-opt-selected{color:var(--ion-color-primary, #3880ff)}";

var PickerColumnCmp = /*#__PURE__*/function () {
  function PickerColumnCmp(hostRef) {
    (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, PickerColumnCmp);

    (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.r)(this, hostRef);
    this.ionPickerColChange = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionPickerColChange", 7);
    this.optHeight = 0;
    this.rotateFactor = 0;
    this.scaleFactor = 1;
    this.velocity = 0;
    this.y = 0;
    this.noAnimate = true;
  }

  (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(PickerColumnCmp, [{
    key: "colChanged",
    value: function colChanged() {
      this.refresh();
    }
  }, {
    key: "connectedCallback",
    value: function () {
      var _connectedCallback = (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
        var _this19 = this;

        var pickerRotateFactor, pickerScaleFactor, mode;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              pickerRotateFactor = 0;
              pickerScaleFactor = 0.81;
              mode = (0,_ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_7__.b)(this);

              if (mode === 'ios') {
                pickerRotateFactor = -0.46;
                pickerScaleFactor = 1;
              }

              this.rotateFactor = pickerRotateFactor;
              this.scaleFactor = pickerScaleFactor;
              _context8.next = 8;
              return Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./index-422b6e83.js */ 9099));

            case 8:
              this.gesture = _context8.sent.createGesture({
                el: this.el,
                gestureName: 'picker-swipe',
                gesturePriority: 100,
                threshold: 0,
                passive: false,
                onStart: function onStart(ev) {
                  return _this19.onStart(ev);
                },
                onMove: function onMove(ev) {
                  return _this19.onMove(ev);
                },
                onEnd: function onEnd(ev) {
                  return _this19.onEnd(ev);
                }
              });
              this.gesture.enable();
              this.tmrId = setTimeout(function () {
                _this19.noAnimate = false;

                _this19.refresh(true);
              }, 250);

            case 11:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));

      function connectedCallback() {
        return _connectedCallback.apply(this, arguments);
      }

      return connectedCallback;
    }()
  }, {
    key: "componentDidLoad",
    value: function componentDidLoad() {
      var colEl = this.optsEl;

      if (colEl) {
        // DOM READ
        // We perfom a DOM read over a rendered item, this needs to happen after the first render
        this.optHeight = colEl.firstElementChild ? colEl.firstElementChild.clientHeight : 0;
      }

      this.refresh();
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      if (this.rafId !== undefined) cancelAnimationFrame(this.rafId);
      if (this.tmrId) clearTimeout(this.tmrId);

      if (this.gesture) {
        this.gesture.destroy();
        this.gesture = undefined;
      }
    }
  }, {
    key: "emitColChange",
    value: function emitColChange() {
      this.ionPickerColChange.emit(this.col);
    }
  }, {
    key: "setSelected",
    value: function setSelected(selectedIndex, duration) {
      // if there is a selected index, then figure out it's y position
      // if there isn't a selected index, then just use the top y position
      var y = selectedIndex > -1 ? -(selectedIndex * this.optHeight) : 0;
      this.velocity = 0; // set what y position we're at

      if (this.rafId !== undefined) cancelAnimationFrame(this.rafId);
      this.update(y, duration, true);
      this.emitColChange();
    }
  }, {
    key: "update",
    value: function update(y, duration, saveY) {
      if (!this.optsEl) {
        return;
      } // ensure we've got a good round number :)


      var translateY = 0;
      var translateZ = 0;
      var col = this.col,
          rotateFactor = this.rotateFactor;
      var selectedIndex = col.selectedIndex = this.indexForY(-y);
      var durationStr = duration === 0 ? '' : duration + 'ms';
      var scaleStr = "scale(".concat(this.scaleFactor, ")");
      var children = this.optsEl.children;

      for (var i = 0; i < children.length; i++) {
        var button = children[i];
        var opt = col.options[i];
        var optOffset = i * this.optHeight + y;
        var transform = '';

        if (rotateFactor !== 0) {
          var rotateX = optOffset * rotateFactor;

          if (Math.abs(rotateX) <= 90) {
            translateY = 0;
            translateZ = 90;
            transform = "rotateX(".concat(rotateX, "deg) ");
          } else {
            translateY = -9999;
          }
        } else {
          translateZ = 0;
          translateY = optOffset;
        }

        var selected = selectedIndex === i;
        transform += "translate3d(0px,".concat(translateY, "px,").concat(translateZ, "px) ");

        if (this.scaleFactor !== 1 && !selected) {
          transform += scaleStr;
        } // Update transition duration


        if (this.noAnimate) {
          opt.duration = 0;
          button.style.transitionDuration = '';
        } else if (duration !== opt.duration) {
          opt.duration = duration;
          button.style.transitionDuration = durationStr;
        } // Update transform


        if (transform !== opt.transform) {
          opt.transform = transform;
        }

        button.style.transform = transform; // Update selected item

        if (selected !== opt.selected) {
          opt.selected = selected;

          if (selected) {
            button.classList.add(PICKER_OPT_SELECTED);
          } else {
            button.classList.remove(PICKER_OPT_SELECTED);
          }
        }
      }

      this.col.prevSelected = selectedIndex;

      if (saveY) {
        this.y = y;
      }

      if (this.lastIndex !== selectedIndex) {
        // have not set a last index yet
        (0,_haptic_029a46f6_js__WEBPACK_IMPORTED_MODULE_16__.b)();
        this.lastIndex = selectedIndex;
      }
    }
  }, {
    key: "decelerate",
    value: function decelerate() {
      var _this20 = this;

      if (this.velocity !== 0) {
        // still decelerating
        this.velocity *= DECELERATION_FRICTION; // do not let it go slower than a velocity of 1

        this.velocity = this.velocity > 0 ? Math.max(this.velocity, 1) : Math.min(this.velocity, -1);
        var y = this.y + this.velocity;

        if (y > this.minY) {
          // whoops, it's trying to scroll up farther than the options we have!
          y = this.minY;
          this.velocity = 0;
        } else if (y < this.maxY) {
          // gahh, it's trying to scroll down farther than we can!
          y = this.maxY;
          this.velocity = 0;
        }

        this.update(y, 0, true);
        var notLockedIn = Math.round(y) % this.optHeight !== 0 || Math.abs(this.velocity) > 1;

        if (notLockedIn) {
          // isn't locked in yet, keep decelerating until it is
          this.rafId = requestAnimationFrame(function () {
            return _this20.decelerate();
          });
        } else {
          this.velocity = 0;
          this.emitColChange();
          (0,_haptic_029a46f6_js__WEBPACK_IMPORTED_MODULE_16__.h)();
        }
      } else if (this.y % this.optHeight !== 0) {
        // needs to still get locked into a position so options line up
        var currentPos = Math.abs(this.y % this.optHeight); // create a velocity in the direction it needs to scroll

        this.velocity = currentPos > this.optHeight / 2 ? 1 : -1;
        this.decelerate();
      }
    }
  }, {
    key: "indexForY",
    value: function indexForY(y) {
      return Math.min(Math.max(Math.abs(Math.round(y / this.optHeight)), 0), this.col.options.length - 1);
    }
  }, {
    key: "onStart",
    value: function onStart(detail) {
      // We have to prevent default in order to block scrolling under the picker
      // but we DO NOT have to stop propagation, since we still want
      // some "click" events to capture
      if (detail.event.cancelable) {
        detail.event.preventDefault();
      }

      detail.event.stopPropagation();
      (0,_haptic_029a46f6_js__WEBPACK_IMPORTED_MODULE_16__.a)(); // reset everything

      if (this.rafId !== undefined) cancelAnimationFrame(this.rafId);
      var options = this.col.options;
      var minY = options.length - 1;
      var maxY = 0;

      for (var i = 0; i < options.length; i++) {
        if (!options[i].disabled) {
          minY = Math.min(minY, i);
          maxY = Math.max(maxY, i);
        }
      }

      this.minY = -(minY * this.optHeight);
      this.maxY = -(maxY * this.optHeight);
    }
  }, {
    key: "onMove",
    value: function onMove(detail) {
      if (detail.event.cancelable) {
        detail.event.preventDefault();
      }

      detail.event.stopPropagation(); // update the scroll position relative to pointer start position

      var y = this.y + detail.deltaY;

      if (y > this.minY) {
        // scrolling up higher than scroll area
        y = Math.pow(y, 0.8);
        this.bounceFrom = y;
      } else if (y < this.maxY) {
        // scrolling down below scroll area
        y += Math.pow(this.maxY - y, 0.9);
        this.bounceFrom = y;
      } else {
        this.bounceFrom = 0;
      }

      this.update(y, 0, false);
    }
  }, {
    key: "onEnd",
    value: function onEnd(detail) {
      if (this.bounceFrom > 0) {
        // bounce back up
        this.update(this.minY, 100, true);
        this.emitColChange();
        return;
      } else if (this.bounceFrom < 0) {
        // bounce back down
        this.update(this.maxY, 100, true);
        this.emitColChange();
        return;
      }

      this.velocity = (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_9__.l)(-MAX_PICKER_SPEED, detail.velocityY * 23, MAX_PICKER_SPEED);

      if (this.velocity === 0 && detail.deltaY === 0) {
        var opt = detail.event.target.closest('.picker-opt');

        if (opt === null || opt === void 0 ? void 0 : opt.hasAttribute('opt-index')) {
          this.setSelected(parseInt(opt.getAttribute('opt-index'), 10), TRANSITION_DURATION);
        }
      } else {
        this.y += detail.deltaY;

        if (Math.abs(detail.velocityY) < 0.05) {
          var isScrollingUp = detail.deltaY > 0;
          var optHeightFraction = Math.abs(this.y) % this.optHeight / this.optHeight;

          if (isScrollingUp && optHeightFraction > 0.5) {
            this.velocity = Math.abs(this.velocity) * -1;
          } else if (!isScrollingUp && optHeightFraction <= 0.5) {
            this.velocity = Math.abs(this.velocity);
          }
        }

        this.decelerate();
      }
    }
  }, {
    key: "refresh",
    value: function refresh(forceRefresh) {
      var _a;

      var min = this.col.options.length - 1;
      var max = 0;
      var options = this.col.options;

      for (var i = 0; i < options.length; i++) {
        if (!options[i].disabled) {
          min = Math.min(min, i);
          max = Math.max(max, i);
        }
      }
      /**
       * Only update selected value if column has a
       * velocity of 0. If it does not, then the
       * column is animating might land on
       * a value different than the value at
       * selectedIndex
       */


      if (this.velocity !== 0) {
        return;
      }

      var selectedIndex = (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_9__.l)(min, (_a = this.col.selectedIndex) !== null && _a !== void 0 ? _a : 0, max);

      if (this.col.prevSelected !== selectedIndex || forceRefresh) {
        var y = selectedIndex * this.optHeight * -1;
        this.velocity = 0;
        this.update(y, TRANSITION_DURATION, true);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _Object$assign2,
          _this21 = this;

      var col = this.col;
      var mode = (0,_ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_7__.b)(this);
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)(_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.H, {
        class: Object.assign((_Object$assign2 = {}, (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_Object$assign2, mode, true), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_Object$assign2, 'picker-col', true), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_Object$assign2, 'picker-opts-left', this.col.align === 'left'), (0,_Users_ricardobento_Documents_AUTOMATION_ionic_e2e_example_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_Object$assign2, 'picker-opts-right', this.col.align === 'right'), _Object$assign2), (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_12__.g)(col.cssClass)),
        style: {
          'max-width': this.col.columnWidth
        }
      }, col.prefix && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "picker-prefix",
        style: {
          width: col.prefixWidth
        }
      }, col.prefix), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "picker-opts",
        style: {
          maxWidth: col.optionsWidth
        },
        ref: function ref(el) {
          return _this21.optsEl = el;
        }
      }, col.options.map(function (o, index) {
        return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("button", {
          "aria-label": o.ariaLabel,
          class: {
            'picker-opt': true,
            'picker-opt-disabled': !!o.disabled
          },
          "opt-index": index
        }, o.text);
      })), col.suffix && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "picker-suffix",
        style: {
          width: col.suffixWidth
        }
      }, col.suffix));
    }
  }, {
    key: "el",
    get: function get() {
      return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_5__.i)(this);
    }
  }], [{
    key: "watchers",
    get: function get() {
      return {
        "col": ["colChanged"]
      };
    }
  }]);

  return PickerColumnCmp;
}();

var PICKER_OPT_SELECTED = 'picker-opt-selected';
var DECELERATION_FRICTION = 0.97;
var MAX_PICKER_SPEED = 90;
var TRANSITION_DURATION = 150;
PickerColumnCmp.style = {
  ios: pickerColumnIosCss,
  md: pickerColumnMdCss
};


/***/ })

}]);
//# sourceMappingURL=node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js.js.map