{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-datetime-button.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, H as Host, i as getElement } from './index-8e692445.js';\nimport { b as getIonMode } from './ionic-global-c74e4951.js';\nimport { a as addEventListener, c as componentOnReady } from './helpers-3b390e48.js';\nimport { b as printIonError } from './index-c4b11676.js';\nimport { c as createColorClasses } from './theme-7670341c.js';\nimport { q as parseDate, t as getToday, J as is24Hour, S as getLocalizedDateTime, G as getMonthAndYear, K as getLocalizedTime, T as getMonthDayAndYear } from './data-caf38df0.js';\n\nconst iosDatetimeButtonCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}\";\n\nconst mdDatetimeButtonCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}\";\n\nconst DatetimeButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.datetimeEl = null;\n    this.overlayEl = null;\n    this.datetimePresentation = 'date-time';\n    this.datetimeActive = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * If `true`, the user cannot interact with the button.\n     */\n    this.disabled = false;\n    /**\n     * Accepts one or more string values and converts\n     * them to DatetimeParts. This is done so datetime-button\n     * can work with an array internally and not need\n     * to keep checking if the datetime value is `string` or `string[]`.\n     */\n    this.getParsedDateValues = (value) => {\n      // TODO FW-2646 Remove value === ''\n      if (value === '' || value === undefined || value === null) {\n        return [];\n      }\n      if (Array.isArray(value)) {\n        return value;\n      }\n      return [value];\n    };\n    /**\n     * Check the value property on the linked\n     * ion-datetime and then format it according\n     * to the locale specified on ion-datetime.\n     */\n    this.setDateTimeText = () => {\n      const { datetimeEl, datetimePresentation } = this;\n      if (!datetimeEl) {\n        return;\n      }\n      const { value, locale, hourCycle, preferWheel, multiple, titleSelectedDatesFormatter } = datetimeEl;\n      const parsedValues = this.getParsedDateValues(value);\n      /**\n       * Both ion-datetime and ion-datetime-button default\n       * to today's date and time if no value is set.\n       */\n      const parsedDatetimes = parseDate(parsedValues.length > 0 ? parsedValues : [getToday()]);\n      /**\n       * If developers incorrectly use multiple=\"true\"\n       * with non \"date\" datetimes, then just select\n       * the first value so the interface does\n       * not appear broken. Datetime will provide a\n       * warning in the console.\n       */\n      const firstParsedDatetime = parsedDatetimes[0];\n      const use24Hour = is24Hour(locale, hourCycle);\n      // TODO(FW-1865) - Remove once FW-1831 is fixed.\n      parsedDatetimes.forEach((parsedDatetime) => {\n        parsedDatetime.tzOffset = undefined;\n      });\n      this.dateText = this.timeText = undefined;\n      switch (datetimePresentation) {\n        case 'date-time':\n        case 'time-date':\n          const dateText = getMonthDayAndYear(locale, firstParsedDatetime);\n          const timeText = getLocalizedTime(locale, firstParsedDatetime, use24Hour);\n          if (preferWheel) {\n            this.dateText = `${dateText} ${timeText}`;\n          }\n          else {\n            this.dateText = dateText;\n            this.timeText = timeText;\n          }\n          break;\n        case 'date':\n          if (multiple && parsedValues.length !== 1) {\n            let headerText = `${parsedValues.length} days`; // default/fallback for multiple selection\n            if (titleSelectedDatesFormatter !== undefined) {\n              try {\n                headerText = titleSelectedDatesFormatter(parsedValues);\n              }\n              catch (e) {\n                printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n              }\n            }\n            this.dateText = headerText;\n          }\n          else {\n            this.dateText = getMonthDayAndYear(locale, firstParsedDatetime);\n          }\n          break;\n        case 'time':\n          this.timeText = getLocalizedTime(locale, firstParsedDatetime, use24Hour);\n          break;\n        case 'month-year':\n          this.dateText = getMonthAndYear(locale, firstParsedDatetime);\n          break;\n        case 'month':\n          this.dateText = getLocalizedDateTime(locale, firstParsedDatetime, { month: 'long' });\n          break;\n        case 'year':\n          this.dateText = getLocalizedDateTime(locale, firstParsedDatetime, { year: 'numeric' });\n          break;\n      }\n    };\n    /**\n     * Waits for the ion-datetime to re-render.\n     * This is needed in order to correctly position\n     * a popover relative to the trigger element.\n     */\n    this.waitForDatetimeChanges = async () => {\n      const { datetimeEl } = this;\n      if (!datetimeEl) {\n        return Promise.resolve();\n      }\n      return new Promise((resolve) => {\n        addEventListener(datetimeEl, 'ionRender', resolve, { once: true });\n      });\n    };\n    this.handleDateClick = async (ev) => {\n      const { datetimeEl, datetimePresentation } = this;\n      if (!datetimeEl) {\n        return;\n      }\n      let needsPresentationChange = false;\n      /**\n       * When clicking the date button,\n       * we need to make sure that only a date\n       * picker is displayed. For presentation styles\n       * that display content other than a date picker,\n       * we need to update the presentation style.\n       */\n      switch (datetimePresentation) {\n        case 'date-time':\n        case 'time-date':\n          const needsChange = datetimeEl.presentation !== 'date';\n          /**\n           * The date+time wheel picker\n           * shows date and time together,\n           * so do not adjust the presentation\n           * in that case.\n           */\n          if (!datetimeEl.preferWheel && needsChange) {\n            datetimeEl.presentation = 'date';\n            needsPresentationChange = true;\n          }\n          break;\n      }\n      /**\n       * Track which button was clicked\n       * so that it can have the correct\n       * activated styles applied when\n       * the modal/popover containing\n       * the datetime is opened.\n       */\n      this.selectedButton = 'date';\n      this.presentOverlay(ev, needsPresentationChange, this.dateTargetEl);\n    };\n    this.handleTimeClick = (ev) => {\n      const { datetimeEl, datetimePresentation } = this;\n      if (!datetimeEl) {\n        return;\n      }\n      let needsPresentationChange = false;\n      /**\n       * When clicking the time button,\n       * we need to make sure that only a time\n       * picker is displayed. For presentation styles\n       * that display content other than a time picker,\n       * we need to update the presentation style.\n       */\n      switch (datetimePresentation) {\n        case 'date-time':\n        case 'time-date':\n          const needsChange = datetimeEl.presentation !== 'time';\n          if (needsChange) {\n            datetimeEl.presentation = 'time';\n            needsPresentationChange = true;\n          }\n          break;\n      }\n      /**\n       * Track which button was clicked\n       * so that it can have the correct\n       * activated styles applied when\n       * the modal/popover containing\n       * the datetime is opened.\n       */\n      this.selectedButton = 'time';\n      this.presentOverlay(ev, needsPresentationChange, this.timeTargetEl);\n    };\n    /**\n     * If the datetime is presented in an\n     * overlay, the datetime and overlay\n     * should be appropriately sized.\n     * These classes provide default sizing values\n     * that developers can customize.\n     * The goal is to provide an overlay that is\n     * reasonably sized with a datetime that\n     * fills the entire container.\n     */\n    this.presentOverlay = async (ev, needsPresentationChange, triggerEl) => {\n      const { overlayEl } = this;\n      if (!overlayEl) {\n        return;\n      }\n      if (overlayEl.tagName === 'ION-POPOVER') {\n        /**\n         * When the presentation on datetime changes,\n         * we need to wait for the component to re-render\n         * otherwise the computed width/height of the\n         * popover content will be wrong, causing\n         * the popover to not align with the trigger element.\n         */\n        if (needsPresentationChange) {\n          await this.waitForDatetimeChanges();\n        }\n        /**\n         * We pass the trigger button element\n         * so that the popover aligns with the individual\n         * button that was clicked, not the component container.\n         */\n        overlayEl.present(Object.assign(Object.assign({}, ev), { detail: {\n            ionShadowTarget: triggerEl,\n          } }));\n      }\n      else {\n        overlayEl.present();\n      }\n    };\n  }\n  async componentWillLoad() {\n    const { datetime } = this;\n    if (!datetime) {\n      printIonError('An ID associated with an ion-datetime instance is required for ion-datetime-button to function properly.', this.el);\n      return;\n    }\n    const datetimeEl = (this.datetimeEl = document.getElementById(datetime));\n    if (!datetimeEl) {\n      printIonError(`No ion-datetime instance found for ID '${datetime}'.`, this.el);\n      return;\n    }\n    /**\n     * Since the datetime can be used in any context (overlays, accordion, etc)\n     * we track when it is visible to determine when it is active.\n     * This informs which button is highlighted as well as the\n     * aria-expanded state.\n     */\n    const io = new IntersectionObserver((entries) => {\n      const ev = entries[0];\n      this.datetimeActive = ev.isIntersecting;\n    }, {\n      threshold: 0.01,\n    });\n    io.observe(datetimeEl);\n    /**\n     * Get a reference to any modal/popover\n     * the datetime is being used in so we can\n     * correctly size it when it is presented.\n     */\n    const overlayEl = (this.overlayEl = datetimeEl.closest('ion-modal, ion-popover'));\n    /**\n     * The .ion-datetime-button-overlay class contains\n     * styles that allow any modal/popover to be\n     * sized according to the dimensions of the datetime.\n     * If developers want a smaller/larger overlay all they need\n     * to do is change the width/height of the datetime.\n     * Additionally, this lets us avoid having to set\n     * explicit widths on each variant of datetime.\n     */\n    if (overlayEl) {\n      overlayEl.classList.add('ion-datetime-button-overlay');\n    }\n    componentOnReady(datetimeEl, () => {\n      const datetimePresentation = (this.datetimePresentation = datetimeEl.presentation || 'date-time');\n      /**\n       * Set the initial display\n       * in the rendered buttons.\n       *\n       * From there, we need to listen\n       * for ionChange to be emitted\n       * from datetime so we know when\n       * to re-render the displayed\n       * text in the buttons.\n       */\n      this.setDateTimeText();\n      addEventListener(datetimeEl, 'ionChange', this.setDateTimeText);\n      /**\n       * Configure the initial selected button\n       * in the event that the datetime is displayed\n       * without clicking one of the datetime buttons.\n       * For example, a datetime could be expanded\n       * in an accordion. In this case users only\n       * need to click the accordion header to show\n       * the datetime.\n       */\n      switch (datetimePresentation) {\n        case 'date-time':\n        case 'date':\n        case 'month-year':\n        case 'month':\n        case 'year':\n          this.selectedButton = 'date';\n          break;\n        case 'time-date':\n        case 'time':\n          this.selectedButton = 'time';\n          break;\n      }\n    });\n  }\n  render() {\n    const { color, dateText, timeText, selectedButton, datetimeActive, disabled } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(color, {\n        [mode]: true,\n        [`${selectedButton}-active`]: datetimeActive,\n        ['datetime-button-disabled']: disabled,\n      }) }, dateText && (h(\"button\", { class: \"ion-activatable\", id: \"date-button\", \"aria-expanded\": datetimeActive ? 'true' : 'false', onClick: this.handleDateClick, disabled: disabled, part: \"native\", ref: (el) => (this.dateTargetEl = el) }, h(\"slot\", { name: \"date-target\" }, dateText), mode === 'md' && h(\"ion-ripple-effect\", null))), timeText && (h(\"button\", { class: \"ion-activatable\", id: \"time-button\", \"aria-expanded\": datetimeActive ? 'true' : 'false', onClick: this.handleTimeClick, disabled: disabled, part: \"native\", ref: (el) => (this.timeTargetEl = el) }, h(\"slot\", { name: \"time-target\" }, timeText), mode === 'md' && h(\"ion-ripple-effect\", null)))));\n  }\n  get el() { return getElement(this); }\n};\nDatetimeButton.style = {\n  ios: iosDatetimeButtonCss,\n  md: mdDatetimeButtonCss\n};\n\nexport { DatetimeButton as ion_datetime_button };\n"],"names":["r","registerInstance","h","H","Host","i","getElement","b","getIonMode","a","addEventListener","c","componentOnReady","printIonError","createColorClasses","q","parseDate","t","getToday","J","is24Hour","S","getLocalizedDateTime","G","getMonthAndYear","K","getLocalizedTime","T","getMonthDayAndYear","iosDatetimeButtonCss","mdDatetimeButtonCss","DatetimeButton","hostRef","datetimeEl","overlayEl","datetimePresentation","datetimeActive","color","disabled","getParsedDateValues","value","undefined","Array","isArray","setDateTimeText","locale","hourCycle","preferWheel","multiple","titleSelectedDatesFormatter","parsedValues","parsedDatetimes","length","firstParsedDatetime","use24Hour","forEach","parsedDatetime","tzOffset","dateText","timeText","headerText","e","month","year","waitForDatetimeChanges","Promise","resolve","once","handleDateClick","ev","needsPresentationChange","needsChange","presentation","selectedButton","presentOverlay","dateTargetEl","handleTimeClick","timeTargetEl","triggerEl","tagName","present","Object","assign","detail","ionShadowTarget","datetime","el","document","getElementById","io","IntersectionObserver","entries","isIntersecting","threshold","observe","closest","classList","add","mode","class","id","onClick","part","ref","name","style","ios","md","ion_datetime_button"],"sourceRoot":"webpack:///"}